-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_QPSK_Rx.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_QPSK_Rx
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx
-- Hierarchy Level: 1
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_QPSK_Rx IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        enb_1_4_1                         :   IN    std_logic;
        enb_1_1_1                         :   IN    std_logic;
        enb_1_4_2                         :   IN    std_logic;
        RxBus_data_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        RxBus_data_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        RxBus_valid                       :   IN    std_logic;
        rx_resetCS                        :   IN    std_logic;
        dataBus_data                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        dataBus_valid                     :   OUT   std_logic;
        rx_nSynced                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        rx_normCoarseFreqEst              :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
        );
END QPSK_src_QPSK_Rx;


ARCHITECTURE rtl OF QPSK_src_QPSK_Rx IS

  -- Component Declarations
  COMPONENT QPSK_src_Digital_AGC
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_RRC_Receive_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Frequency_and_Time_Synchronizer
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          enb_1_4_1                       :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          enb_1_4_2                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          validIn                         :   IN    std_logic;
          rx_resetCS                      :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          startOut                        :   OUT   std_logic;
          endOut                          :   OUT   std_logic;
          validOut                        :   OUT   std_logic;
          rx_nSynced                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          rx_normCoarseFreqEst            :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
          );
  END COMPONENT;

  COMPONENT QPSK_src_QPSK_Demodulator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          startIn                         :   IN    std_logic;
          endIn                           :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic;
          startOut                        :   OUT   std_logic;
          endOut                          :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_HDL_Data_Descrambler
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic;
          startIn                         :   IN    std_logic;
          endIn                           :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Pack_Bits
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          bitIn                           :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_Digital_AGC
    USE ENTITY work.QPSK_src_Digital_AGC(rtl);

  FOR ALL : QPSK_src_RRC_Receive_Filter
    USE ENTITY work.QPSK_src_RRC_Receive_Filter(rtl);

  FOR ALL : QPSK_src_Frequency_and_Time_Synchronizer
    USE ENTITY work.QPSK_src_Frequency_and_Time_Synchronizer(rtl);

  FOR ALL : QPSK_src_QPSK_Demodulator
    USE ENTITY work.QPSK_src_QPSK_Demodulator(rtl);

  FOR ALL : QPSK_src_HDL_Data_Descrambler
    USE ENTITY work.QPSK_src_HDL_Data_Descrambler(rtl);

  FOR ALL : QPSK_src_Pack_Bits
    USE ENTITY work.QPSK_src_Pack_Bits(rtl);

  -- Signals
  SIGNAL data_re                          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL data_im                          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL RxDataIn_re                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL RxDataIn_im                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL valid                            : std_logic;
  SIGNAL valid_1                          : std_logic;
  SIGNAL Digital_AGC_dataOut_re           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Digital_AGC_dataOut_im           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Digital_AGC_validOut             : std_logic;
  SIGNAL RRC_Receive_Filter_out1_re       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL RRC_Receive_Filter_out1_im       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL RRC_Receive_Filter_out2          : std_logic;
  SIGNAL QPSKConstellationPoints_re       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSKConstellationPoints_im       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Frequency_and_Time_Synchronizer_startOut : std_logic;
  SIGNAL Frequency_and_Time_Synchronizer_endOut : std_logic;
  SIGNAL QPSKConstellationValid           : std_logic;
  SIGNAL rx_nSynced_1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL rx_normCoarseFreqEst_1           : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL QPSK_Demodulator_dataOut         : std_logic;
  SIGNAL QPSK_Demodulator_startOut        : std_logic;
  SIGNAL QPSK_Demodulator_endOut          : std_logic;
  SIGNAL QPSK_Demodulator_validOut        : std_logic;
  SIGNAL HDL_Data_Descrambler_dataOut     : std_logic;
  SIGNAL HDL_Data_Descrambler_validOut    : std_logic;
  SIGNAL y                                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL valid_2                          : std_logic;
  SIGNAL data                             : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL rx_nSynced_unsigned              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL rx_nSynced_tmp                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL rx_normCoarseFreqEst_signed      : signed(20 DOWNTO 0);  -- sfix21_En21
  SIGNAL rx_normCoarseFreqEst_tmp         : signed(20 DOWNTO 0);  -- sfix21_En21

BEGIN
  u_Digital_AGC : QPSK_src_Digital_AGC
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => std_logic_vector(RxDataIn_re),  -- sfix16_En14
              dataIn_im => std_logic_vector(RxDataIn_im),  -- sfix16_En14
              validIn => valid_1,
              dataOut_re => Digital_AGC_dataOut_re,  -- sfix16_En14
              dataOut_im => Digital_AGC_dataOut_im,  -- sfix16_En14
              validOut => Digital_AGC_validOut
              );

  u_RRC_Receive_Filter : QPSK_src_RRC_Receive_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => Digital_AGC_dataOut_re,  -- sfix16_En14
              dataIn_im => Digital_AGC_dataOut_im,  -- sfix16_En14
              validIn => Digital_AGC_validOut,
              dataOut_re => RRC_Receive_Filter_out1_re,  -- sfix16_En12
              dataOut_im => RRC_Receive_Filter_out1_im,  -- sfix16_En12
              validOut => RRC_Receive_Filter_out2
              );

  u_Frequency_and_Time_Synchronizer : QPSK_src_Frequency_and_Time_Synchronizer
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_1 => enb_1_4_1,
              enb_1_1_1 => enb_1_1_1,
              enb_1_4_2 => enb_1_4_2,
              dataIn_re => RRC_Receive_Filter_out1_re,  -- sfix16_En12
              dataIn_im => RRC_Receive_Filter_out1_im,  -- sfix16_En12
              validIn => RRC_Receive_Filter_out2,
              rx_resetCS => rx_resetCS,
              dataOut_re => QPSKConstellationPoints_re,  -- sfix16_En14
              dataOut_im => QPSKConstellationPoints_im,  -- sfix16_En14
              startOut => Frequency_and_Time_Synchronizer_startOut,
              endOut => Frequency_and_Time_Synchronizer_endOut,
              validOut => QPSKConstellationValid,
              rx_nSynced => rx_nSynced_1,  -- uint32
              rx_normCoarseFreqEst => rx_normCoarseFreqEst_1  -- sfix21_En21
              );

  u_QPSK_Demodulator : QPSK_src_QPSK_Demodulator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => QPSKConstellationPoints_re,  -- sfix16_En14
              dataIn_im => QPSKConstellationPoints_im,  -- sfix16_En14
              startIn => Frequency_and_Time_Synchronizer_startOut,
              endIn => Frequency_and_Time_Synchronizer_endOut,
              validIn => QPSKConstellationValid,
              dataOut => QPSK_Demodulator_dataOut,
              startOut => QPSK_Demodulator_startOut,
              endOut => QPSK_Demodulator_endOut,
              validOut => QPSK_Demodulator_validOut
              );

  u_HDL_Data_Descrambler : QPSK_src_HDL_Data_Descrambler
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn => QPSK_Demodulator_dataOut,
              startIn => QPSK_Demodulator_startOut,
              endIn => QPSK_Demodulator_endOut,
              validIn => QPSK_Demodulator_validOut,
              dataOut => HDL_Data_Descrambler_dataOut,
              validOut => HDL_Data_Descrambler_validOut
              );

  u_Pack_Bits : QPSK_src_Pack_Bits
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              bitIn => HDL_Data_Descrambler_dataOut,
              validIn => HDL_Data_Descrambler_validOut,
              dataOut => y,  -- uint32
              validOut => valid_2
              );

  data_re <= signed(RxBus_data_re);

  RxDataIn_re <= data_re;

  data_im <= signed(RxBus_data_im);

  RxDataIn_im <= data_im;

  valid <= RxBus_valid;

  valid_1 <= valid;

  data <= unsigned(y);

  dataBus_data <= std_logic_vector(data);

  rx_nSynced_unsigned <= unsigned(rx_nSynced_1);

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        rx_nSynced_tmp <= to_unsigned(0, 32);
      ELSIF enb_1_4_0 = '1' THEN
        rx_nSynced_tmp <= rx_nSynced_unsigned;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  rx_nSynced <= std_logic_vector(rx_nSynced_tmp);

  rx_normCoarseFreqEst_signed <= signed(rx_normCoarseFreqEst_1);

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        rx_normCoarseFreqEst_tmp <= to_signed(16#000000#, 21);
      ELSIF enb_1_4_0 = '1' THEN
        rx_normCoarseFreqEst_tmp <= rx_normCoarseFreqEst_signed;
      END IF;
    END IF;
  END PROCESS delayMatch1_process;


  rx_normCoarseFreqEst <= std_logic_vector(rx_normCoarseFreqEst_tmp);

  dataBus_valid <= valid_2;

END rtl;

