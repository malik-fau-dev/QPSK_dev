-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_FIR_Interpolator_block.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_FIR_Interpolator_block
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/To DAC/Vector Interpolation/FIR Interpolator
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- HDLFIRInterpolation
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.QPSK_src_QPSK_pkg.ALL;

ENTITY QPSK_src_FIR_Interpolator_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   vector_of_std_logic_vector33(0 TO 3);  -- sfix33_En28 [4]
        dataOut_im                        :   OUT   vector_of_std_logic_vector33(0 TO 3);  -- sfix33_En28 [4]
        validOut                          :   OUT   std_logic
        );
END QPSK_src_FIR_Interpolator_block;


ARCHITECTURE rtl OF QPSK_src_FIR_Interpolator_block IS

  -- Component Declarations
  COMPONENT QPSK_src_FIRFilter1_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(29 DOWNTO 0);  -- sfix30_En28
          dataOut_im                      :   OUT   std_logic_vector(29 DOWNTO 0);  -- sfix30_En28
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_FIRFilter2_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En29
          dataOut_im                      :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En29
          );
  END COMPONENT;

  COMPONENT QPSK_src_FIRFilter3_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En29
          dataOut_im                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En29
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_FIRFilter4_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En29
          dataOut_im                      :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En29
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_FIRFilter1_block
    USE ENTITY work.QPSK_src_FIRFilter1_block(rtl);

  FOR ALL : QPSK_src_FIRFilter2_block
    USE ENTITY work.QPSK_src_FIRFilter2_block(rtl);

  FOR ALL : QPSK_src_FIRFilter3_block
    USE ENTITY work.QPSK_src_FIRFilter3_block(rtl);

  FOR ALL : QPSK_src_FIRFilter4_block
    USE ENTITY work.QPSK_src_FIRFilter4_block(rtl);

  -- Signals
  SIGNAL syncReset                        : std_logic;
  SIGNAL FIROutput1_re                    : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL FIROutput1_im                    : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL FIRValid1                        : std_logic;
  SIGNAL FIRVector_re                     : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIRVector_im                     : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIROutput1_re_signed             : signed(29 DOWNTO 0);  -- sfix30_En28
  SIGNAL FIROutput1_im_signed             : signed(29 DOWNTO 0);  -- sfix30_En28
  SIGNAL FIROutputCast1_re                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutputCast1_im                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutput2_re                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL FIROutput2_im                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL FIROutput2_re_signed             : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL FIROutput2_im_signed             : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL FIROutputCast2_re                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutputCast2_im                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutput3_re                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL FIROutput3_im                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL FIRValid3                        : std_logic;
  SIGNAL FIROutput3_re_signed             : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL FIROutput3_im_signed             : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL FIROutputCast3_re                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutputCast3_im                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL intdelay_reg_re                  : vector_of_signed33(0 TO 6);  -- sfix33_En28 [7]
  SIGNAL intdelay_reg_im                  : vector_of_signed33(0 TO 6);  -- sfix33_En28 [7]
  SIGNAL FIROutputCastDB3_re              : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutputCastDB3_im              : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutput4_re                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL FIROutput4_im                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL FIROutput4_re_signed             : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL FIROutput4_im_signed             : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL FIROutputCast4_re                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIROutputCast4_im                : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL FIRVector_re_1                   : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIRVector_im_1                   : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIRVector_re_2                   : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIRVector_im_2                   : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIRVectorOut_re                  : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIRVectorOut_im                  : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL dataOut_re_tmp                   : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL dataOut_im_tmp                   : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]

BEGIN
  u_filterInstantiation : QPSK_src_FIRFilter1_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => validIn,
              dataOut_re => FIROutput1_re,  -- sfix30_En28
              dataOut_im => FIROutput1_im,  -- sfix30_En28
              validOut => FIRValid1
              );

  u_filterInstantiation_1 : QPSK_src_FIRFilter2_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => validIn,
              dataOut_re => FIROutput2_re,  -- sfix32_En29
              dataOut_im => FIROutput2_im  -- sfix32_En29
              );

  u_filterInstantiation_2 : QPSK_src_FIRFilter3_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => validIn,
              dataOut_re => FIROutput3_re,  -- sfix32_En29
              dataOut_im => FIROutput3_im,  -- sfix32_En29
              validOut => FIRValid3
              );

  u_filterInstantiation_3 : QPSK_src_FIRFilter4_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => validIn,
              dataOut_re => FIROutput4_re,  -- sfix32_En29
              dataOut_im => FIROutput4_im  -- sfix32_En29
              );

  syncReset <= '0';

  FIRVector_re <= (OTHERS => to_signed(0, 33));
  FIRVector_im <= (OTHERS => to_signed(0, 33));

  FIROutput1_re_signed <= signed(FIROutput1_re);

  FIROutput1_im_signed <= signed(FIROutput1_im);

  FIROutputCast1_re <= resize(FIROutput1_re_signed, 33);
  FIROutputCast1_im <= resize(FIROutput1_im_signed, 33);

  FIROutput2_re_signed <= signed(FIROutput2_re);

  FIROutput2_im_signed <= signed(FIROutput2_im);

  FIROutputCast2_re <= resize(FIROutput2_re_signed(31 DOWNTO 1), 33);
  FIROutputCast2_im <= resize(FIROutput2_im_signed(31 DOWNTO 1), 33);

  FIROutput3_re_signed <= signed(FIROutput3_re);

  FIROutput3_im_signed <= signed(FIROutput3_im);

  FIROutputCast3_re <= resize(FIROutput3_re_signed(31 DOWNTO 1), 33);
  FIROutputCast3_im <= resize(FIROutput3_im_signed(31 DOWNTO 1), 33);

  intdelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        intdelay_reg_re <= (OTHERS => to_signed(0, 33));
        intdelay_reg_im <= (OTHERS => to_signed(0, 33));
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_re <= (OTHERS => to_signed(0, 33));
          intdelay_reg_im <= (OTHERS => to_signed(0, 33));
        ELSIF FIRValid3 = '1' THEN
          intdelay_reg_im(0) <= FIROutputCast3_im;
          intdelay_reg_im(1 TO 6) <= intdelay_reg_im(0 TO 5);
          intdelay_reg_re(0) <= FIROutputCast3_re;
          intdelay_reg_re(1 TO 6) <= intdelay_reg_re(0 TO 5);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_process;

  FIROutputCastDB3_re <= intdelay_reg_re(6);
  FIROutputCastDB3_im <= intdelay_reg_im(6);

  FIROutput4_re_signed <= signed(FIROutput4_re);

  FIROutput4_im_signed <= signed(FIROutput4_im);

  FIROutputCast4_re <= resize(FIROutput4_re_signed(31 DOWNTO 1), 33);
  FIROutputCast4_im <= resize(FIROutput4_im_signed(31 DOWNTO 1), 33);

  FIRVector_re_1(0) <= FIROutputCast1_re;
  FIRVector_re_1(1) <= FIROutputCast2_re;
  FIRVector_re_1(2) <= FIROutputCastDB3_re;
  FIRVector_re_1(3) <= FIROutputCast4_re;

  FIRVector_im_1(0) <= FIROutputCast1_im;
  FIRVector_im_1(1) <= FIROutputCast2_im;
  FIRVector_im_1(2) <= FIROutputCastDB3_im;
  FIRVector_im_1(3) <= FIROutputCast4_im;

  
  FIRVector_re_2 <= FIRVector_re WHEN FIRValid1 = '0' ELSE
      FIRVector_re_1;
  
  FIRVector_im_2 <= FIRVector_im WHEN FIRValid1 = '0' ELSE
      FIRVector_im_1;

  intdelay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        FIRVectorOut_re <= (OTHERS => to_signed(0, 33));
        FIRVectorOut_im <= (OTHERS => to_signed(0, 33));
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          FIRVectorOut_re <= (OTHERS => to_signed(0, 33));
          FIRVectorOut_im <= (OTHERS => to_signed(0, 33));
        ELSE 
          FIRVectorOut_re <= FIRVector_re_2;
          FIRVectorOut_im <= FIRVector_im_2;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  dataOut_re_tmp <= FIRVectorOut_re;
  dataOut_im_tmp <= FIRVectorOut_im;

  outputgen1: FOR k IN 0 TO 3 GENERATE
    dataOut_re(k) <= std_logic_vector(dataOut_re_tmp(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 3 GENERATE
    dataOut_im(k) <= std_logic_vector(dataOut_im_tmp(k));
  END GENERATE;

  intdelay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        validOut <= '0';
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          validOut <= '0';
        ELSE 
          validOut <= FIRValid1;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


END rtl;

