-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Output_Registers.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Output_Registers
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/Output Registers
-- Hierarchy Level: 1
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Output_Registers IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        rx_nSynced                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        rx_normCoarseFreqEst              :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En21
        regOut_rx_nSynced                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        regOut_rx_normCoarseFreqEst       :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
        );
END QPSK_src_Output_Registers;


ARCHITECTURE rtl OF QPSK_src_Output_Registers IS

  -- Signals
  SIGNAL rx_nSynced_unsigned              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL rx_nSynced_1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL rx_normCoarseFreqEst_signed      : signed(20 DOWNTO 0);  -- sfix21_En21
  SIGNAL rx_normCoarseFreqEst_1           : signed(20 DOWNTO 0);  -- sfix21_En21

BEGIN
  rx_nSynced_unsigned <= unsigned(rx_nSynced);

  Rate_Transition_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        rx_nSynced_1 <= to_unsigned(0, 32);
      ELSIF enb_1_4_0 = '1' THEN
        rx_nSynced_1 <= rx_nSynced_unsigned;
      END IF;
    END IF;
  END PROCESS Rate_Transition_process;


  regOut_rx_nSynced <= std_logic_vector(rx_nSynced_1);

  rx_normCoarseFreqEst_signed <= signed(rx_normCoarseFreqEst);

  Rate_Transition1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        rx_normCoarseFreqEst_1 <= to_signed(16#000000#, 21);
      ELSIF enb_1_4_0 = '1' THEN
        rx_normCoarseFreqEst_1 <= rx_normCoarseFreqEst_signed;
      END IF;
    END IF;
  END PROCESS Rate_Transition1_process;


  regOut_rx_normCoarseFreqEst <= std_logic_vector(rx_normCoarseFreqEst_1);

END rtl;

