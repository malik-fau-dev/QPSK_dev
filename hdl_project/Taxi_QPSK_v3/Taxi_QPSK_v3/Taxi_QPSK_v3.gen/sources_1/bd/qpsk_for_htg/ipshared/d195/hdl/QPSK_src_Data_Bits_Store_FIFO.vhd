-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Data_Bits_Store_FIFO.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Data_Bits_Store_FIFO
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Tx/Bit Packetizer/Bits Store/Data Bits Store FIFO
-- Hierarchy Level: 4
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Data_Bits_Store_FIFO IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        wrData                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        wrValid                           :   IN    std_logic;
        rdEn                              :   IN    std_logic;
        rdData                            :   OUT   std_logic;
        rdValid                           :   OUT   std_logic;
        fifoNum                           :   OUT   std_logic_vector(10 DOWNTO 0);  -- ufix11
        fifoNotFull                       :   OUT   std_logic
        );
END QPSK_src_Data_Bits_Store_FIFO;


ARCHITECTURE rtl OF QPSK_src_Data_Bits_Store_FIFO IS

  -- Component Declarations
  COMPONENT QPSK_src_HDL_FIFO_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Push                            :   IN    std_logic;
          Pop                             :   IN    std_logic;
          Out_rsvd                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          Empty                           :   OUT   std_logic;
          Full                            :   OUT   std_logic;
          Num                             :   OUT   std_logic_vector(10 DOWNTO 0)  -- ufix11
          );
  END COMPONENT;

  COMPONENT QPSK_src_Read_Control
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          rd_en                           :   IN    std_logic;
          fifo_data_avail                 :   IN    std_logic;
          fifo_data                       :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          fifo_ack                        :   OUT   std_logic;
          bit_out                         :   OUT   std_logic;  -- ufix1
          valid_out                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_HDL_FIFO_block
    USE ENTITY work.QPSK_src_HDL_FIFO_block(rtl);

  FOR ALL : QPSK_src_Read_Control
    USE ENTITY work.QPSK_src_Read_Control(rtl);

  -- Signals
  SIGNAL HDL_FIFO_out3                    : std_logic;
  SIGNAL NOT_out1                         : std_logic;
  SIGNAL AND_out1                         : std_logic;
  SIGNAL fifo_ack                         : std_logic;
  SIGNAL HDL_FIFO_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL HDL_FIFO_out2                    : std_logic;
  SIGNAL HDL_FIFO_out4                    : std_logic_vector(10 DOWNTO 0);  -- ufix11
  SIGNAL NOT1_out1                        : std_logic;
  SIGNAL bit_out                          : std_logic;  -- ufix1
  SIGNAL valid_out                        : std_logic;
  SIGNAL Data_Type_Conversion_out1        : std_logic;
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL HDL_FIFO_out4_unsigned           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Compare_To_Constant_out1         : std_logic;

BEGIN
  u_HDL_FIFO : QPSK_src_HDL_FIFO_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => wrData,  -- uint32
              Push => AND_out1,
              Pop => fifo_ack,
              Out_rsvd => HDL_FIFO_out1,  -- uint32
              Empty => HDL_FIFO_out2,
              Full => HDL_FIFO_out3,
              Num => HDL_FIFO_out4  -- ufix11
              );

  u_Read_Control : QPSK_src_Read_Control
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              rd_en => rdEn,
              fifo_data_avail => NOT1_out1,
              fifo_data => HDL_FIFO_out1,  -- uint32
              fifo_ack => fifo_ack,
              bit_out => bit_out,  -- ufix1
              valid_out => valid_out
              );

  NOT_out1 <=  NOT HDL_FIFO_out3;

  AND_out1 <= NOT_out1 AND wrValid;

  NOT1_out1 <=  NOT HDL_FIFO_out2;

  Data_Type_Conversion_out1 <= bit_out;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= Data_Type_Conversion_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= valid_out;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  HDL_FIFO_out4_unsigned <= unsigned(HDL_FIFO_out4);

  
  Compare_To_Constant_out1 <= '1' WHEN HDL_FIFO_out4_unsigned < to_unsigned(16#3FF#, 11) ELSE
      '0';

  rdData <= Delay_out1;

  rdValid <= Delay1_out1;

  fifoNum <= HDL_FIFO_out4;

  fifoNotFull <= Compare_To_Constant_out1;

END rtl;

