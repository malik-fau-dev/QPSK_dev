-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Direct_Digital_Synthesis.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Direct_Digital_Synthesis
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/Frequency and Time Synchronizer/Carrier Synchronizer/Direct 
-- Digital Synthesi
-- Hierarchy Level: 4
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Direct_Digital_Synthesis IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        validIn                           :   IN    std_logic;
        rst                               :   IN    std_logic;
        phaseInc                          :   IN    std_logic_vector(39 DOWNTO 0);  -- sfix40_En39
        expOut_re                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        expOut_im                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END QPSK_src_Direct_Digital_Synthesis;


ARCHITECTURE rtl OF QPSK_src_Direct_Digital_Synthesis IS

  -- Component Declarations
  COMPONENT QPSK_src_NCO
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          inc                             :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21
          resetPhase                      :   IN    std_logic;
          validIn                         :   IN    std_logic;
          complexexp_re                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          complexexp_im                   :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_NCO
    USE ENTITY work.QPSK_src_NCO(rtl);

  -- Signals
  SIGNAL phaseInc_signed                  : signed(39 DOWNTO 0);  -- sfix40_En39
  SIGNAL Delay_out1                       : signed(39 DOWNTO 0);  -- sfix40_En39
  SIGNAL Data_Type_Conversion_out1        : signed(20 DOWNTO 0);  -- sfix21_En21
  SIGNAL Data_Type_Conversion1_out1       : signed(20 DOWNTO 0);  -- sfix21
  SIGNAL NCO_out1_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL NCO_out1_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_NCO : QPSK_src_NCO
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              inc => std_logic_vector(Data_Type_Conversion1_out1),  -- sfix21
              resetPhase => rst,
              validIn => validIn,
              complexexp_re => NCO_out1_re,  -- sfix16_En14
              complexexp_im => NCO_out1_im  -- sfix16_En14
              );

  phaseInc_signed <= signed(phaseInc);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(0, 40);
      ELSIF enb_1_4_0 = '1' THEN
        Delay_out1 <= phaseInc_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Data_Type_Conversion_out1 <= Delay_out1(38 DOWNTO 18);

  Data_Type_Conversion1_out1 <= Data_Type_Conversion_out1;

  expOut_re <= NCO_out1_re;

  expOut_im <= NCO_out1_im;

END rtl;

