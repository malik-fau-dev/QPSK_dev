-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_SR_Latch.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_SR_Latch
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/QPSK Demodulator/Deserialize x2/SR Latch
-- Hierarchy Level: 4
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_SR_Latch IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        S                                 :   IN    std_logic;
        R                                 :   IN    std_logic;
        Q                                 :   OUT   std_logic
        );
END QPSK_src_SR_Latch;


ARCHITECTURE rtl OF QPSK_src_SR_Latch IS

  -- Signals
  SIGNAL Logical_Operator6_out1           : std_logic;
  SIGNAL stateControl_1                   : std_logic;
  SIGNAL delayMatch_reg                   : std_logic_vector(3 DOWNTO 0);  -- ufix1 [4]
  SIGNAL stateControl_2                   : std_logic;
  SIGNAL enb_gated                        : std_logic;
  SIGNAL Unit_Delay_out1                  : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;
  SIGNAL Logical_Operator5_out1           : std_logic;

BEGIN
  Logical_Operator6_out1 <=  NOT R;

  stateControl_1 <= '1';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch_reg(0) <= stateControl_1;
        delayMatch_reg(3 DOWNTO 1) <= delayMatch_reg(2 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  stateControl_2 <= delayMatch_reg(3);

  enb_gated <= stateControl_2 AND enb;

  Logical_Operator1_out1 <= Logical_Operator6_out1 AND Unit_Delay_out1;

  Logical_Operator5_out1 <= S OR Logical_Operator1_out1;

  Unit_Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay_out1 <= '0';
      ELSIF enb_gated = '1' THEN
        Unit_Delay_out1 <= Logical_Operator5_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Q <= Unit_Delay_out1;

END rtl;

