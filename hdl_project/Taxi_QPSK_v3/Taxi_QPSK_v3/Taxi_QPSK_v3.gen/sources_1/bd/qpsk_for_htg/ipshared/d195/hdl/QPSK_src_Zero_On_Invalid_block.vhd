-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Zero_On_Invalid_block.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Zero_On_Invalid_block
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/To DAC/To DAC Interface/Zero On Invalid
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.QPSK_src_QPSK_pkg.ALL;

ENTITY QPSK_src_Zero_On_Invalid_block IS
  PORT( dataIn_re                         :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        dataIn_im                         :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        dataOut_im                        :   OUT   vector_of_std_logic_vector16(0 TO 3)  -- sfix16_En14 [4]
        );
END QPSK_src_Zero_On_Invalid_block;


ARCHITECTURE rtl OF QPSK_src_Zero_On_Invalid_block IS

  -- Component Declarations
  COMPONENT QPSK_src_Zeros_Like_block
    PORT( u_re                            :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
          u_im                            :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
          y_re                            :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
          y_im                            :   OUT   vector_of_std_logic_vector16(0 TO 3)  -- sfix16_En14 [4]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_Zeros_Like_block
    USE ENTITY work.QPSK_src_Zeros_Like_block(rtl);

  -- Signals
  SIGNAL y_re                             : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL y_im                             : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL y_re_signed                      : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL y_im_signed                      : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL dataIn_re_signed                 : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL dataIn_im_signed                 : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL Multiport_Switch_out1_re         : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL Multiport_Switch_out1_im         : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]

BEGIN
  u_Zeros_Like : QPSK_src_Zeros_Like_block
    PORT MAP( u_re => dataIn_re,  -- sfix16_En14 [4]
              u_im => dataIn_im,  -- sfix16_En14 [4]
              y_re => y_re,  -- sfix16_En14 [4]
              y_im => y_im  -- sfix16_En14 [4]
              );

  outputgen5: FOR k IN 0 TO 3 GENERATE
    y_re_signed(k) <= signed(y_re(k));
  END GENERATE;

  outputgen4: FOR k IN 0 TO 3 GENERATE
    y_im_signed(k) <= signed(y_im(k));
  END GENERATE;

  outputgen3: FOR k IN 0 TO 3 GENERATE
    dataIn_re_signed(k) <= signed(dataIn_re(k));
  END GENERATE;

  outputgen2: FOR k IN 0 TO 3 GENERATE
    dataIn_im_signed(k) <= signed(dataIn_im(k));
  END GENERATE;

  
  Multiport_Switch_out1_re <= y_re_signed WHEN validIn = '0' ELSE
      dataIn_re_signed;
  
  Multiport_Switch_out1_im <= y_im_signed WHEN validIn = '0' ELSE
      dataIn_im_signed;

  outputgen1: FOR k IN 0 TO 3 GENERATE
    dataOut_re(k) <= std_logic_vector(Multiport_Switch_out1_re(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 3 GENERATE
    dataOut_im(k) <= std_logic_vector(Multiport_Switch_out1_im(k));
  END GENERATE;

END rtl;

