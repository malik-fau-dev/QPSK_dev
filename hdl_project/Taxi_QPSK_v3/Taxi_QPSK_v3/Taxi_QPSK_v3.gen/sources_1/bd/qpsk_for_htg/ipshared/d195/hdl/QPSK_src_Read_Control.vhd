-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Read_Control.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Read_Control
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Tx/Bit Packetizer/Bits Store/Data Bits Store FIFO/Read Control
-- Hierarchy Level: 5
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Read_Control IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        rd_en                             :   IN    std_logic;
        fifo_data_avail                   :   IN    std_logic;
        fifo_data                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        fifo_ack                          :   OUT   std_logic;
        bit_out                           :   OUT   std_logic;  -- ufix1
        valid_out                         :   OUT   std_logic
        );
END QPSK_src_Read_Control;


ARCHITECTURE rtl OF QPSK_src_Read_Control IS

  -- Signals
  SIGNAL fifo_data_unsigned               : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL next_state                       : std_logic;  -- ufix1
  SIGNAL bit_idx_reg                      : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL data_reg                         : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL next_state_next                  : std_logic;  -- ufix1
  SIGNAL bit_idx_reg_next                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL data_reg_next                    : unsigned(30 DOWNTO 0);  -- ufix31

BEGIN
  fifo_data_unsigned <= unsigned(fifo_data);

  Read_Control_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        next_state <= '0';
        bit_idx_reg <= to_unsigned(16#00#, 5);
        data_reg <= to_unsigned(16#00000000#, 31);
      ELSIF enb = '1' THEN
        next_state <= next_state_next;
        bit_idx_reg <= bit_idx_reg_next;
        data_reg <= data_reg_next;
      END IF;
    END IF;
  END PROCESS Read_Control_process;

  Read_Control_output : PROCESS (bit_idx_reg, data_reg, fifo_data_avail, fifo_data_unsigned, next_state, rd_en)
    VARIABLE fifo_data1 : unsigned(31 DOWNTO 0);
  BEGIN
    next_state_next <= next_state;
    bit_idx_reg_next <= bit_idx_reg;
    data_reg_next <= data_reg;
    --MATLAB Function 'QPSK/QPSK Tx/Bit Packetizer/Bits Store/Data Bits Store FIFO/Read Control'
    fifo_data1 := fifo_data_unsigned;
    -- defaults
    valid_out <= '0';
    fifo_ack <= '0';
    CASE next_state IS
      WHEN '0' =>
        IF (rd_en AND fifo_data_avail) = '1' THEN 
          next_state_next <= '1';
          bit_idx_reg_next <= to_unsigned(16#01#, 5);
          data_reg_next <= fifo_data1(31 DOWNTO 1);
          valid_out <= '1';
          fifo_ack <= '1';
        END IF;
      WHEN '1' =>
        IF rd_en = '1' THEN 
          IF bit_idx_reg = to_unsigned(16#1F#, 5) THEN 
            next_state_next <= '0';
          ELSE 
            bit_idx_reg_next <= bit_idx_reg + to_unsigned(16#01#, 5);
          END IF;
          valid_out <= '1';
          data_reg_next <= data_reg srl 1;
        END IF;
      WHEN OTHERS => 
        NULL;
    END CASE;
    IF next_state = '0' THEN 
      bit_out <= fifo_data1(0);
    ELSE 
      bit_out <= data_reg(0);
    END IF;
  END PROCESS Read_Control_output;


END rtl;

