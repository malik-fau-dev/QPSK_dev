-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Data_to_uint32.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Data_to_uint32
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/To DMA/Capture Source Mux/Data to uint32
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Data_to_uint32 IS
  PORT( In1_data_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        In1_data_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        In1_valid                         :   IN    std_logic;
        Out1_data                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        Out1_valid                        :   OUT   std_logic
        );
END QPSK_src_Data_to_uint32;


ARCHITECTURE rtl OF QPSK_src_Data_to_uint32 IS

  -- Component Declarations
  COMPONENT QPSK_src_From_Data_Bus_block
    PORT( bus_data_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          bus_data_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          bus_valid                       :   IN    std_logic;
          data_re                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          data_im                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          valid                           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Pack_Samples
    PORT( u_re                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          u_im                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  COMPONENT QPSK_src_To_Data_Bus_block1
    PORT( data                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          valid                           :   IN    std_logic;
          bus_data                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          bus_valid                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_From_Data_Bus_block
    USE ENTITY work.QPSK_src_From_Data_Bus_block(rtl);

  FOR ALL : QPSK_src_Pack_Samples
    USE ENTITY work.QPSK_src_Pack_Samples(rtl);

  FOR ALL : QPSK_src_To_Data_Bus_block1
    USE ENTITY work.QPSK_src_To_Data_Bus_block1(rtl);

  -- Signals
  SIGNAL data_re                          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL data_im                          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL valid                            : std_logic;
  SIGNAL y                                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL To_Data_Bus_bus_data             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL To_Data_Bus_bus_valid            : std_logic;

BEGIN
  u_From_Data_Bus : QPSK_src_From_Data_Bus_block
    PORT MAP( bus_data_re => In1_data_re,  -- sfix16_En14
              bus_data_im => In1_data_im,  -- sfix16_En14
              bus_valid => In1_valid,
              data_re => data_re,  -- sfix16_En14
              data_im => data_im,  -- sfix16_En14
              valid => valid
              );

  u_Pack_Samples : QPSK_src_Pack_Samples
    PORT MAP( u_re => data_re,  -- sfix16_En14
              u_im => data_im,  -- sfix16_En14
              y => y  -- uint32
              );

  u_To_Data_Bus : QPSK_src_To_Data_Bus_block1
    PORT MAP( data => y,  -- uint32
              valid => valid,
              bus_data => To_Data_Bus_bus_data,  -- uint32
              bus_valid => To_Data_Bus_bus_valid
              );

  Out1_data <= To_Data_Bus_bus_data;

  Out1_valid <= To_Data_Bus_bus_valid;

END rtl;

