-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Clocks.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Clocks
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Tx/Bit Packetizer/Clocks
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Clocks IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        bitClk                            :   OUT   std_logic;
        symClk                            :   OUT   std_logic
        );
END QPSK_src_Clocks;


ARCHITECTURE rtl OF QPSK_src_Clocks IS

  -- Signals
  SIGNAL count_step                       : std_logic;  -- ufix1
  SIGNAL count_from                       : std_logic;  -- ufix1
  SIGNAL HDL_Counter_out1                 : std_logic;  -- ufix1
  SIGNAL count                            : std_logic;  -- ufix1
  SIGNAL need_to_wrap                     : std_logic;
  SIGNAL count_value                      : std_logic;  -- ufix1
  SIGNAL Compare_To_Zero_out1             : std_logic;
  SIGNAL count_step_1                     : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL count_from_1                     : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL HDL_Counter1_out1                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL count_1                          : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL need_to_wrap_1                   : std_logic;
  SIGNAL count_value_1                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Compare_To_Constant_out1         : std_logic;

BEGIN
  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 1
  count_step <= '1';

  count_from <= '0';

  count <= HDL_Counter_out1 XOR count_step;

  
  need_to_wrap <= '1' WHEN HDL_Counter_out1 = '1' ELSE
      '0';

  
  count_value <= count WHEN need_to_wrap = '0' ELSE
      count_from;

  HDL_Counter_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        HDL_Counter_out1 <= '0';
      ELSIF enb = '1' THEN
        HDL_Counter_out1 <= count_value;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  Compare_To_Zero_out1 <= '1' WHEN HDL_Counter_out1 = '0' ELSE
      '0';

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 3
  count_step_1 <= to_unsigned(16#1#, 2);

  count_from_1 <= to_unsigned(16#0#, 2);

  count_1 <= HDL_Counter1_out1 + count_step_1;

  
  need_to_wrap_1 <= '1' WHEN HDL_Counter1_out1 = to_unsigned(16#3#, 2) ELSE
      '0';

  
  count_value_1 <= count_1 WHEN need_to_wrap_1 = '0' ELSE
      count_from_1;

  HDL_Counter1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        HDL_Counter1_out1 <= to_unsigned(16#0#, 2);
      ELSIF enb = '1' THEN
        HDL_Counter1_out1 <= count_value_1;
      END IF;
    END IF;
  END PROCESS HDL_Counter1_process;


  
  Compare_To_Constant_out1 <= '1' WHEN HDL_Counter1_out1 = to_unsigned(16#3#, 2) ELSE
      '0';

  bitClk <= Compare_To_Zero_out1;

  symClk <= Compare_To_Constant_out1;

END rtl;

