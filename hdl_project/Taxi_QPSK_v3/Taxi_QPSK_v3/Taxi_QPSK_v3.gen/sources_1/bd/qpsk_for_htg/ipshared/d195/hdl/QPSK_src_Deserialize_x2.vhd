-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Deserialize_x2.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Deserialize_x2
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/QPSK Demodulator/Deserialize x2
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Deserialize_x2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(1 DOWNTO 0);  -- boolean [2]
        validIn                           :   IN    std_logic;
        dataOut                           :   OUT   std_logic;
        validOut                          :   OUT   std_logic
        );
END QPSK_src_Deserialize_x2;


ARCHITECTURE rtl OF QPSK_src_Deserialize_x2 IS

  -- Component Declarations
  COMPONENT QPSK_src_SR_Latch
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          S                               :   IN    std_logic;
          R                               :   IN    std_logic;
          Q                               :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_SR_Latch
    USE ENTITY work.QPSK_src_SR_Latch(rtl);

  -- Signals
  SIGNAL SR_Latch_Q                       : std_logic;
  SIGNAL Selector1_out1                   : std_logic;
  SIGNAL Selector_out1                    : std_logic;
  SIGNAL Unit_Delay_Enabled_Synchronous_out1 : std_logic;
  SIGNAL Multiport_Switch_out1            : std_logic;
  SIGNAL OR_out1                          : std_logic;

BEGIN
  u_SR_Latch : QPSK_src_SR_Latch
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              S => validIn,
              R => SR_Latch_Q,
              Q => SR_Latch_Q
              );

  Selector1_out1 <= dataIn(0);

  Selector_out1 <= dataIn(1);

  Unit_Delay_Enabled_Synchronous_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= '0';
      ELSIF enb = '1' AND validIn = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= Selector_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_Enabled_Synchronous_process;


  
  Multiport_Switch_out1 <= Selector1_out1 WHEN SR_Latch_Q = '0' ELSE
      Unit_Delay_Enabled_Synchronous_out1;

  OR_out1 <= validIn OR SR_Latch_Q;

  dataOut <= Multiport_Switch_out1;

  validOut <= OR_out1;

END rtl;

