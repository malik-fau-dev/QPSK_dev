-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Bits_Store.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Bits_Store
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Tx/Bit Packetizer/Bits Store
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Bits_Store IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataSel                           :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        dataRd                            :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        validIn                           :   IN    std_logic;
        dataOut                           :   OUT   std_logic;
        validOut                          :   OUT   std_logic;
        fifoNum                           :   OUT   std_logic_vector(10 DOWNTO 0);  -- ufix11
        fifoReady                         :   OUT   std_logic
        );
END QPSK_src_Bits_Store;


ARCHITECTURE rtl OF QPSK_src_Bits_Store IS

  -- Component Declarations
  COMPONENT QPSK_src_Training_Data_Source
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          rdEn                            :   IN    std_logic;
          rdData                          :   OUT   std_logic;
          rdValid                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Preamble_Bits_Store
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          rdEn                            :   IN    std_logic;
          rdData                          :   OUT   std_logic;
          rdValid                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Data_Bits_Store_FIFO
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          wrData                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          wrValid                         :   IN    std_logic;
          rdEn                            :   IN    std_logic;
          rdData                          :   OUT   std_logic;
          rdValid                         :   OUT   std_logic;
          fifoNum                         :   OUT   std_logic_vector(10 DOWNTO 0);  -- ufix11
          fifoNotFull                     :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_Training_Data_Source
    USE ENTITY work.QPSK_src_Training_Data_Source(rtl);

  FOR ALL : QPSK_src_Preamble_Bits_Store
    USE ENTITY work.QPSK_src_Preamble_Bits_Store(rtl);

  FOR ALL : QPSK_src_Data_Bits_Store_FIFO
    USE ENTITY work.QPSK_src_Data_Bits_Store_FIFO(rtl);

  -- Signals
  SIGNAL dataSel_unsigned                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Delay1_out1                      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL AND_out1                         : std_logic;
  SIGNAL Training_Data_Source_rdData      : std_logic;
  SIGNAL Training_Data_Source_rdValid     : std_logic;
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL AND1_out1                        : std_logic;
  SIGNAL Preamble_Bits_Store_rdData       : std_logic;
  SIGNAL Preamble_Bits_Store_rdValid      : std_logic;
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL AND2_out1                        : std_logic;
  SIGNAL Data_Bits_Store_FIFO_rdData      : std_logic;
  SIGNAL Data_Bits_Store_FIFO_rdValid     : std_logic;
  SIGNAL Data_Bits_Store_FIFO_fifoNum     : std_logic_vector(10 DOWNTO 0);  -- ufix11
  SIGNAL Data_Bits_Store_FIFO_fifoNotFull : std_logic;
  SIGNAL Multiport_Switch_out1            : std_logic;
  SIGNAL OR_out1                          : std_logic;

BEGIN
  u_Training_Data_Source : QPSK_src_Training_Data_Source
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              rdEn => AND_out1,
              rdData => Training_Data_Source_rdData,
              rdValid => Training_Data_Source_rdValid
              );

  u_Preamble_Bits_Store : QPSK_src_Preamble_Bits_Store
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              rdEn => AND1_out1,
              rdData => Preamble_Bits_Store_rdData,
              rdValid => Preamble_Bits_Store_rdValid
              );

  u_Data_Bits_Store_FIFO : QPSK_src_Data_Bits_Store_FIFO
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              wrData => dataIn,  -- uint32
              wrValid => validIn,
              rdEn => AND2_out1,
              rdData => Data_Bits_Store_FIFO_rdData,
              rdValid => Data_Bits_Store_FIFO_rdValid,
              fifoNum => Data_Bits_Store_FIFO_fifoNum,  -- ufix11
              fifoNotFull => Data_Bits_Store_FIFO_fifoNotFull
              );

  dataSel_unsigned <= unsigned(dataSel);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= to_unsigned(16#0#, 2);
      ELSIF enb = '1' THEN
        Delay1_out1 <= dataSel_unsigned;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  
  Compare_To_Constant_out1 <= '1' WHEN dataSel_unsigned = to_unsigned(16#0#, 2) ELSE
      '0';

  AND_out1 <= Compare_To_Constant_out1 AND dataRd;

  
  Compare_To_Constant1_out1 <= '1' WHEN dataSel_unsigned = to_unsigned(16#1#, 2) ELSE
      '0';

  AND1_out1 <= Compare_To_Constant1_out1 AND dataRd;

  
  Compare_To_Constant2_out1 <= '1' WHEN dataSel_unsigned = to_unsigned(16#2#, 2) ELSE
      '0';

  AND2_out1 <= Compare_To_Constant2_out1 AND dataRd;

  
  Multiport_Switch_out1 <= Training_Data_Source_rdData WHEN Delay1_out1 = to_unsigned(16#0#, 2) ELSE
      Preamble_Bits_Store_rdData WHEN Delay1_out1 = to_unsigned(16#1#, 2) ELSE
      Data_Bits_Store_FIFO_rdData;

  OR_out1 <= Data_Bits_Store_FIFO_rdValid OR (Training_Data_Source_rdValid OR Preamble_Bits_Store_rdValid);

  dataOut <= Multiport_Switch_out1;

  validOut <= OR_out1;

  fifoNum <= Data_Bits_Store_FIFO_fifoNum;

  fifoReady <= Data_Bits_Store_FIFO_fifoNotFull;

END rtl;

