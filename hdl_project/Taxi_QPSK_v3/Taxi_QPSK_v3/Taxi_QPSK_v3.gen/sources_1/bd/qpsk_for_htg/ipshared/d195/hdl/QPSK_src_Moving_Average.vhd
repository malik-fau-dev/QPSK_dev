-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Moving_Average.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Moving_Average
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/Digital AGC/Power Threshold/Moving Average
-- Hierarchy Level: 4
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.QPSK_src_QPSK_pkg.ALL;

ENTITY QPSK_src_Moving_Average IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1                               :   IN    std_logic_vector(32 DOWNTO 0);  -- sfix33_En28
        Out1                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END QPSK_src_Moving_Average;


ARCHITECTURE rtl OF QPSK_src_Moving_Average IS

  -- Signals
  SIGNAL In1_signed                       : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL Delay1_reg                       : vector_of_signed33(0 TO 63);  -- sfix33 [64]
  SIGNAL Delay1_out1                      : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL Delay_out1                       : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Add_stage2_add_cast              : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Add_stage2_add_temp              : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Add_op_stage1                    : signed(36 DOWNTO 0);  -- sfix37_En28
  SIGNAL Add_stage3_sub_cast              : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Add_stage3_sub_cast_1            : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Add_out1                         : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Bit_Shift_out1                   : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Data_Type_Conversion_out1        : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  In1_signed <= signed(In1);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_reg <= (OTHERS => to_signed(0, 33));
      ELSIF enb = '1' THEN
        Delay1_reg(0) <= In1_signed;
        Delay1_reg(1 TO 63) <= Delay1_reg(0 TO 62);
      END IF;
    END IF;
  END PROCESS Delay1_process;

  Delay1_out1 <= Delay1_reg(63);

  Add_stage2_add_cast <= resize(In1_signed(32 DOWNTO 14), 22);
  Add_stage2_add_temp <= Delay_out1 + Add_stage2_add_cast;
  Add_op_stage1 <= resize(Add_stage2_add_temp & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 37);

  Add_stage3_sub_cast <= Add_op_stage1(35 DOWNTO 14);
  Add_stage3_sub_cast_1 <= resize(Delay1_out1(32 DOWNTO 14), 22);
  Add_out1 <= Add_stage3_sub_cast - Add_stage3_sub_cast_1;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(16#000000#, 22);
      ELSIF enb = '1' THEN
        Delay_out1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Bit_Shift_out1 <= Delay_out1 srl 6;

  Data_Type_Conversion_out1 <= Bit_Shift_out1(15 DOWNTO 0);

  Out1 <= std_logic_vector(Data_Type_Conversion_out1);

END rtl;

