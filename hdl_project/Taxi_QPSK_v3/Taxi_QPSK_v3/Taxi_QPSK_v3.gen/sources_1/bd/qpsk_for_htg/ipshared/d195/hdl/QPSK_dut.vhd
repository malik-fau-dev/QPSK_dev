-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_dut.vhd
-- Created: 2025-09-17 13:28:21
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_dut
-- Source Path: QPSK/QPSK_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        mm2sData                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        mm2sValid                         :   IN    std_logic;  -- ufix1
        adcDataI_0                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataI_1                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataI_2                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataI_3                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataQ_0                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataQ_1                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataQ_2                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcDataQ_3                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
        adcValid                          :   IN    std_logic;  -- ufix1
        regIn_tx_enable                   :   IN    std_logic;  -- ufix1
        regIn_rx_reset_cs                 :   IN    std_logic;  -- ufix1
        regIn_rx_src_sel                  :   IN    std_logic;  -- ufix1
        regIn_capture_start               :   IN    std_logic;  -- ufix1
        regIn_capture_length              :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        regIn_capture_src_sel             :   IN    std_logic;  -- ufix1
        regIn_tx_output_gain              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        regIn_rx_input_gain               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        regIn_capture_mode                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        s2mmReady                         :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        s2mmData                          :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        s2mmValid                         :   OUT   std_logic;  -- ufix1
        s2mmLast                          :   OUT   std_logic;  -- ufix1
        dacDataI_0                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataI_1                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataI_2                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataI_3                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataQ_0                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataQ_1                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataQ_2                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacDataQ_3                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
        dacValid                          :   OUT   std_logic;  -- ufix1
        regOut_rx_nSynced                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        regOut_rx_normCoarseFreqEst       :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En21
        mm2sReady                         :   OUT   std_logic  -- ufix1
        );
END QPSK_dut;


ARCHITECTURE rtl OF QPSK_dut IS

  -- Component Declarations
  COMPONENT QPSK_src_QPSK
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          mm2sData                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          mm2sValid                       :   IN    std_logic;  -- ufix1
          adcDataI_0                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataI_1                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataI_2                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataI_3                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataQ_0                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataQ_1                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataQ_2                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcDataQ_3                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          adcValid                        :   IN    std_logic;  -- ufix1
          regIn_tx_enable                 :   IN    std_logic;  -- ufix1
          regIn_rx_reset_cs               :   IN    std_logic;  -- ufix1
          regIn_rx_src_sel                :   IN    std_logic;  -- ufix1
          regIn_capture_start             :   IN    std_logic;  -- ufix1
          regIn_capture_length            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          regIn_capture_src_sel           :   IN    std_logic;  -- ufix1
          regIn_tx_output_gain            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          regIn_rx_input_gain             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          regIn_capture_mode              :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          s2mmReady                       :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          s2mmData                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          s2mmValid                       :   OUT   std_logic;  -- ufix1
          s2mmLast                        :   OUT   std_logic;  -- ufix1
          dacDataI_0                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataI_1                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataI_2                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataI_3                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataQ_0                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataQ_1                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataQ_2                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacDataQ_3                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          dacValid                        :   OUT   std_logic;  -- ufix1
          regOut_rx_nSynced               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          regOut_rx_normCoarseFreqEst     :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En21
          mm2sReady                       :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_QPSK
    USE ENTITY work.QPSK_src_QPSK(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL mm2sValid_sig                    : std_logic;  -- ufix1
  SIGNAL adcValid_sig                     : std_logic;  -- ufix1
  SIGNAL regIn_tx_enable_sig              : std_logic;  -- ufix1
  SIGNAL regIn_rx_reset_cs_sig            : std_logic;  -- ufix1
  SIGNAL regIn_rx_src_sel_sig             : std_logic;  -- ufix1
  SIGNAL regIn_capture_start_sig          : std_logic;  -- ufix1
  SIGNAL regIn_capture_src_sel_sig        : std_logic;  -- ufix1
  SIGNAL s2mmReady_sig                    : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL s2mmData_sig                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL s2mmValid_sig                    : std_logic;  -- ufix1
  SIGNAL s2mmLast_sig                     : std_logic;  -- ufix1
  SIGNAL dacDataI_0_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataI_1_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataI_2_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataI_3_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataQ_0_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataQ_1_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataQ_2_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacDataQ_3_sig                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dacValid_sig                     : std_logic;  -- ufix1
  SIGNAL regOut_rx_nSynced_sig            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL regOut_rx_normCoarseFreqEst_sig  : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL mm2sReady_sig                    : std_logic;  -- ufix1

BEGIN
  u_QPSK_src_QPSK : QPSK_src_QPSK
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              mm2sData => mm2sData,  -- ufix32
              mm2sValid => mm2sValid_sig,  -- ufix1
              adcDataI_0 => adcDataI_0,  -- sfix16
              adcDataI_1 => adcDataI_1,  -- sfix16
              adcDataI_2 => adcDataI_2,  -- sfix16
              adcDataI_3 => adcDataI_3,  -- sfix16
              adcDataQ_0 => adcDataQ_0,  -- sfix16
              adcDataQ_1 => adcDataQ_1,  -- sfix16
              adcDataQ_2 => adcDataQ_2,  -- sfix16
              adcDataQ_3 => adcDataQ_3,  -- sfix16
              adcValid => adcValid_sig,  -- ufix1
              regIn_tx_enable => regIn_tx_enable_sig,  -- ufix1
              regIn_rx_reset_cs => regIn_rx_reset_cs_sig,  -- ufix1
              regIn_rx_src_sel => regIn_rx_src_sel_sig,  -- ufix1
              regIn_capture_start => regIn_capture_start_sig,  -- ufix1
              regIn_capture_length => regIn_capture_length,  -- ufix32
              regIn_capture_src_sel => regIn_capture_src_sel_sig,  -- ufix1
              regIn_tx_output_gain => regIn_tx_output_gain,  -- sfix18_En15
              regIn_rx_input_gain => regIn_rx_input_gain,  -- sfix18_En15
              regIn_capture_mode => regIn_capture_mode,  -- ufix2
              s2mmReady => s2mmReady_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              s2mmData => s2mmData_sig,  -- ufix32
              s2mmValid => s2mmValid_sig,  -- ufix1
              s2mmLast => s2mmLast_sig,  -- ufix1
              dacDataI_0 => dacDataI_0_sig,  -- sfix16
              dacDataI_1 => dacDataI_1_sig,  -- sfix16
              dacDataI_2 => dacDataI_2_sig,  -- sfix16
              dacDataI_3 => dacDataI_3_sig,  -- sfix16
              dacDataQ_0 => dacDataQ_0_sig,  -- sfix16
              dacDataQ_1 => dacDataQ_1_sig,  -- sfix16
              dacDataQ_2 => dacDataQ_2_sig,  -- sfix16
              dacDataQ_3 => dacDataQ_3_sig,  -- sfix16
              dacValid => dacValid_sig,  -- ufix1
              regOut_rx_nSynced => regOut_rx_nSynced_sig,  -- ufix32
              regOut_rx_normCoarseFreqEst => regOut_rx_normCoarseFreqEst_sig,  -- sfix21_En21
              mm2sReady => mm2sReady_sig  -- ufix1
              );

  mm2sValid_sig <= mm2sValid;

  adcValid_sig <= adcValid;

  regIn_tx_enable_sig <= regIn_tx_enable;

  regIn_rx_reset_cs_sig <= regIn_rx_reset_cs;

  regIn_rx_src_sel_sig <= regIn_rx_src_sel;

  regIn_capture_start_sig <= regIn_capture_start;

  regIn_capture_src_sel_sig <= regIn_capture_src_sel;

  s2mmReady_sig <= s2mmReady;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  s2mmData <= s2mmData_sig;

  s2mmValid <= s2mmValid_sig;

  s2mmLast <= s2mmLast_sig;

  dacDataI_0 <= dacDataI_0_sig;

  dacDataI_1 <= dacDataI_1_sig;

  dacDataI_2 <= dacDataI_2_sig;

  dacDataI_3 <= dacDataI_3_sig;

  dacDataQ_0 <= dacDataQ_0_sig;

  dacDataQ_1 <= dacDataQ_1_sig;

  dacDataQ_2 <= dacDataQ_2_sig;

  dacDataQ_3 <= dacDataQ_3_sig;

  dacValid <= dacValid_sig;

  regOut_rx_nSynced <= regOut_rx_nSynced_sig;

  regOut_rx_normCoarseFreqEst <= regOut_rx_normCoarseFreqEst_sig;

  mm2sReady <= mm2sReady_sig;

END rtl;

