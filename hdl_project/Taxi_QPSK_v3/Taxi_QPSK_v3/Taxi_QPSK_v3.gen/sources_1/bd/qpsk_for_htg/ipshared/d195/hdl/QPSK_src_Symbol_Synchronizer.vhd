-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Symbol_Synchronizer.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Symbol_Synchronizer
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/Frequency and Time Synchronizer/Symbol Synchronizer
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Symbol_Synchronizer IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        enb_1_4_2                         :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validOut                          :   OUT   std_logic
        );
END QPSK_src_Symbol_Synchronizer;


ARCHITECTURE rtl OF QPSK_src_Symbol_Synchronizer IS

  -- Component Declarations
  COMPONENT QPSK_src_Gardner_TED
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          data_re                         :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          data_im                         :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          strobe                          :   IN    std_logic;
          e                               :   OUT   std_logic_vector(39 DOWNTO 0)  -- sfix40_En24
          );
  END COMPONENT;

  COMPONENT QPSK_src_Loop_Filter_block1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          e                               :   IN    std_logic_vector(39 DOWNTO 0);  -- sfix40_En24
          v                               :   OUT   std_logic_vector(10 DOWNTO 0)  -- sfix11_En10
          );
  END COMPONENT;

  COMPONENT QPSK_src_Interpolation_Control
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Delta                           :   IN    std_logic_vector(10 DOWNTO 0);  -- sfix11_En10
          mu                              :   OUT   std_logic_vector(10 DOWNTO 0);  -- sfix11_En10
          Underflow                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Interpolation_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_re                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          In_im                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          mu                              :   IN    std_logic_vector(10 DOWNTO 0);  -- sfix11_En10
          interpolant_re                  :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          interpolant_im                  :   OUT   std_logic_vector(18 DOWNTO 0)  -- sfix19_En12
          );
  END COMPONENT;

  COMPONENT QPSK_src_Rate_Handle_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          enb_1_4_2                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          strobe                          :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_Gardner_TED
    USE ENTITY work.QPSK_src_Gardner_TED(rtl);

  FOR ALL : QPSK_src_Loop_Filter_block1
    USE ENTITY work.QPSK_src_Loop_Filter_block1(rtl);

  FOR ALL : QPSK_src_Interpolation_Control
    USE ENTITY work.QPSK_src_Interpolation_Control(rtl);

  FOR ALL : QPSK_src_Interpolation_Filter
    USE ENTITY work.QPSK_src_Interpolation_Filter(rtl);

  FOR ALL : QPSK_src_Rate_Handle_block
    USE ENTITY work.QPSK_src_Rate_Handle_block(rtl);

  -- Signals
  SIGNAL RxSSValidIn                      : std_logic;
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Integer_Delay1_out1_re           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Integer_Delay1_out1_im           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Underflow                        : std_logic;
  SIGNAL Integer_Delay3_out1              : std_logic;
  SIGNAL Delay5_reg                       : std_logic_vector(11 DOWNTO 0);  -- ufix1 [12]
  SIGNAL Delay5_out1                      : std_logic;
  SIGNAL strobe                           : std_logic;
  SIGNAL Gardner_data_im                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Interpolation_Filter_interpolant_im : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL Interpolation_Filter_interpolant_im_signed : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Interpolation_Filter_interpolant_re_signed : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Gardner_data_re                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Gardner_TED_e                    : std_logic_vector(39 DOWNTO 0);  -- ufix40
  SIGNAL Gardner_TED_e_signed             : signed(39 DOWNTO 0);  -- sfix40_En24
  SIGNAL Delay3_out1                      : signed(39 DOWNTO 0);  -- sfix40_En24
  SIGNAL Loop_Filter_v                    : std_logic_vector(10 DOWNTO 0);  -- ufix11
  SIGNAL Loop_Filter_v_signed             : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delta                            : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL mu                               : std_logic_vector(10 DOWNTO 0);  -- ufix11
  SIGNAL mu_signed                        : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Integer_Delay4_out1              : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Interpolation_Filter_interpolant_re : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL Delay1_out1_re                   : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Delay1_out1_im                   : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Data_Type_Conversion4_out1_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Data_Type_Conversion4_out1_im    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Integer_Delay2_out1              : std_logic;
  SIGNAL Delay7_reg                       : std_logic_vector(11 DOWNTO 0);  -- ufix1 [12]
  SIGNAL Delay7_out1                      : std_logic;
  SIGNAL Delay6_out1                      : std_logic;
  SIGNAL Rate_Handle_dataOut_re           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Rate_Handle_dataOut_im           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Rate_Handle_validOut             : std_logic;

BEGIN
  u_Gardner_TED : QPSK_src_Gardner_TED
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              data_re => std_logic_vector(Gardner_data_re),  -- sfix19_En12
              data_im => std_logic_vector(Gardner_data_im),  -- sfix19_En12
              strobe => strobe,
              e => Gardner_TED_e  -- sfix40_En24
              );

  u_Loop_Filter : QPSK_src_Loop_Filter_block1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              e => std_logic_vector(Delay3_out1),  -- sfix40_En24
              v => Loop_Filter_v  -- sfix11_En10
              );

  u_Interpolation_Control : QPSK_src_Interpolation_Control
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Delta => std_logic_vector(Delta),  -- sfix11_En10
              mu => mu,  -- sfix11_En10
              Underflow => Underflow
              );

  u_Interpolation_Filter : QPSK_src_Interpolation_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_re => std_logic_vector(Integer_Delay1_out1_re),  -- sfix16_En12
              In_im => std_logic_vector(Integer_Delay1_out1_im),  -- sfix16_En12
              mu => std_logic_vector(Integer_Delay4_out1),  -- sfix11_En10
              interpolant_re => Interpolation_Filter_interpolant_re,  -- sfix19_En12
              interpolant_im => Interpolation_Filter_interpolant_im  -- sfix19_En12
              );

  u_Rate_Handle : QPSK_src_Rate_Handle_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_2 => enb_1_4_2,
              dataIn_re => std_logic_vector(Data_Type_Conversion4_out1_re),  -- sfix16_En14
              dataIn_im => std_logic_vector(Data_Type_Conversion4_out1_im),  -- sfix16_En14
              strobe => Delay2_out1,
              validIn => Delay6_out1,
              dataOut_re => Rate_Handle_dataOut_re,  -- sfix16_En14
              dataOut_im => Rate_Handle_dataOut_im,  -- sfix16_En14
              validOut => Rate_Handle_validOut
              );

  RxSSValidIn <= validIn;

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  Integer_Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Integer_Delay1_out1_re <= to_signed(16#0000#, 16);
        Integer_Delay1_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Integer_Delay1_out1_re <= dataIn_re_signed;
        Integer_Delay1_out1_im <= dataIn_im_signed;
      END IF;
    END IF;
  END PROCESS Integer_Delay1_process;


  Integer_Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Integer_Delay3_out1 <= '0';
      ELSIF enb = '1' THEN
        Integer_Delay3_out1 <= Underflow;
      END IF;
    END IF;
  END PROCESS Integer_Delay3_process;


  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay5_reg(0) <= Integer_Delay3_out1;
        Delay5_reg(11 DOWNTO 1) <= Delay5_reg(10 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay5_process;

  Delay5_out1 <= Delay5_reg(11);

  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        strobe <= '0';
      ELSIF enb = '1' THEN
        strobe <= Delay5_out1;
      END IF;
    END IF;
  END PROCESS Delay9_process;


  Interpolation_Filter_interpolant_im_signed <= signed(Interpolation_Filter_interpolant_im);

  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Gardner_data_re <= to_signed(16#00000#, 19);
        Gardner_data_im <= to_signed(16#00000#, 19);
      ELSIF enb = '1' THEN
        Gardner_data_re <= Interpolation_Filter_interpolant_re_signed;
        Gardner_data_im <= Interpolation_Filter_interpolant_im_signed;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Gardner_TED_e_signed <= signed(Gardner_TED_e);

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_signed(0, 40);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Gardner_TED_e_signed;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Loop_Filter_v_signed <= signed(Loop_Filter_v);

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delta <= to_signed(16#000#, 11);
      ELSIF enb = '1' THEN
        Delta <= Loop_Filter_v_signed;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  mu_signed <= signed(mu);

  Integer_Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Integer_Delay4_out1 <= to_signed(16#000#, 11);
      ELSIF enb = '1' THEN
        Integer_Delay4_out1 <= mu_signed;
      END IF;
    END IF;
  END PROCESS Integer_Delay4_process;


  Interpolation_Filter_interpolant_re_signed <= signed(Interpolation_Filter_interpolant_re);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_re <= to_signed(16#00000#, 19);
        Delay1_out1_im <= to_signed(16#00000#, 19);
      ELSIF enb = '1' THEN
        Delay1_out1_re <= Interpolation_Filter_interpolant_re_signed;
        Delay1_out1_im <= Interpolation_Filter_interpolant_im_signed;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Data_Type_Conversion4_out1_re <= Delay1_out1_re(13 DOWNTO 0) & '0' & '0';
  Data_Type_Conversion4_out1_im <= Delay1_out1_im(13 DOWNTO 0) & '0' & '0';

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= Delay5_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Integer_Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Integer_Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Integer_Delay2_out1 <= RxSSValidIn;
      END IF;
    END IF;
  END PROCESS Integer_Delay2_process;


  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay7_reg(0) <= Integer_Delay2_out1;
        Delay7_reg(11 DOWNTO 1) <= Delay7_reg(10 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay7_process;

  Delay7_out1 <= Delay7_reg(11);

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay6_out1 <= Delay7_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;



  dataOut_re <= Rate_Handle_dataOut_re;

  dataOut_im <= Rate_Handle_dataOut_im;

  validOut <= Rate_Handle_validOut;

END rtl;

