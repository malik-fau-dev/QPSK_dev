-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Vector_Interpolation.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Vector_Interpolation
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/To DAC/Vector Interpolation
-- Hierarchy Level: 2
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.QPSK_src_QPSK_pkg.ALL;

ENTITY QPSK_src_Vector_Interpolation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        dataOut_im                        :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        validOut                          :   OUT   std_logic
        );
END QPSK_src_Vector_Interpolation;


ARCHITECTURE rtl OF QPSK_src_Vector_Interpolation IS

  -- Component Declarations
  COMPONENT QPSK_src_FIR_Interpolator_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   vector_of_std_logic_vector33(0 TO 3);  -- sfix33_En28 [4]
          dataOut_im                      :   OUT   vector_of_std_logic_vector33(0 TO 3);  -- sfix33_En28 [4]
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_FIR_Interpolator_block
    USE ENTITY work.QPSK_src_FIR_Interpolator_block(rtl);

  -- Signals
  SIGNAL FIR_Interpolator_out1_re         : vector_of_std_logic_vector33(0 TO 3);  -- ufix33 [4]
  SIGNAL FIR_Interpolator_out1_im         : vector_of_std_logic_vector33(0 TO 3);  -- ufix33 [4]
  SIGNAL FIR_Interpolator_out2            : std_logic;
  SIGNAL FIR_Interpolator_out1_re_signed  : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL FIR_Interpolator_out1_im_signed  : vector_of_signed33(0 TO 3);  -- sfix33_En28 [4]
  SIGNAL Data_Type_Conversion_out1_re     : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL Data_Type_Conversion_out1_im     : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]

BEGIN
  u_FIR_Interpolator : QPSK_src_FIR_Interpolator_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => validIn,
              dataOut_re => FIR_Interpolator_out1_re,  -- sfix33_En28 [4]
              dataOut_im => FIR_Interpolator_out1_im,  -- sfix33_En28 [4]
              validOut => FIR_Interpolator_out2
              );

  outputgen3: FOR k IN 0 TO 3 GENERATE
    FIR_Interpolator_out1_re_signed(k) <= signed(FIR_Interpolator_out1_re(k));
  END GENERATE;

  outputgen2: FOR k IN 0 TO 3 GENERATE
    FIR_Interpolator_out1_im_signed(k) <= signed(FIR_Interpolator_out1_im(k));
  END GENERATE;


  Data_Type_Conversion_out1_im_gen: FOR ii IN 0 TO 3 GENERATE
    Data_Type_Conversion_out1_re(ii) <= FIR_Interpolator_out1_re_signed(ii)(29 DOWNTO 14);
    Data_Type_Conversion_out1_im(ii) <= FIR_Interpolator_out1_im_signed(ii)(29 DOWNTO 14);
  END GENERATE Data_Type_Conversion_out1_im_gen;


  outputgen1: FOR k IN 0 TO 3 GENERATE
    dataOut_re(k) <= std_logic_vector(Data_Type_Conversion_out1_re(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 3 GENERATE
    dataOut_im(k) <= std_logic_vector(Data_Type_Conversion_out1_im(k));
  END GENERATE;

  validOut <= FIR_Interpolator_out2;

END rtl;

