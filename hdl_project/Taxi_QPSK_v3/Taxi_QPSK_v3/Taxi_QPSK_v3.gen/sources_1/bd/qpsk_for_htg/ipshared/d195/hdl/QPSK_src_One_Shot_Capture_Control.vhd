-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_One_Shot_Capture_Control.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_One_Shot_Capture_Control
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/To DMA/Triggered Capture/One-Shot Capture Control
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_One_Shot_Capture_Control IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        validIn                           :   IN    std_logic;
        start                             :   IN    std_logic;
        length                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        readyOut                          :   IN    std_logic;
        validOut                          :   OUT   std_logic;
        lastOut                           :   OUT   std_logic
        );
END QPSK_src_One_Shot_Capture_Control;


ARCHITECTURE rtl OF QPSK_src_One_Shot_Capture_Control IS

  -- Signals
  SIGNAL count_step                       : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL length_unsigned                  : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL HDL_Counter_out1                 : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL count                            : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL AND_out1                         : std_logic;
  SIGNAL count_1                          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL count_2                          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Compare_To_Zero_out1             : std_logic;
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL AND1_out1                        : std_logic;

BEGIN
  -- Free running, Unsigned Counter
  --  initial value   = 0
  --  step value      = -1
  count_step <= to_unsigned(1, 32);

  length_unsigned <= unsigned(length);

  count <= HDL_Counter_out1 - count_step;

  
  count_1 <= HDL_Counter_out1 WHEN AND_out1 = '0' ELSE
      count;

  
  count_2 <= count_1 WHEN start = '0' ELSE
      length_unsigned;

  HDL_Counter_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        HDL_Counter_out1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        HDL_Counter_out1 <= count_2;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  Compare_To_Zero_out1 <= '1' WHEN HDL_Counter_out1 > to_unsigned(0, 32) ELSE
      '0';

  AND_out1 <= Compare_To_Zero_out1 AND (validIn AND readyOut);

  
  Compare_To_Constant_out1 <= '1' WHEN HDL_Counter_out1 = to_unsigned(1, 32) ELSE
      '0';

  AND1_out1 <= Compare_To_Constant_out1 AND AND_out1;

  validOut <= AND_out1;

  lastOut <= AND1_out1;

END rtl;

