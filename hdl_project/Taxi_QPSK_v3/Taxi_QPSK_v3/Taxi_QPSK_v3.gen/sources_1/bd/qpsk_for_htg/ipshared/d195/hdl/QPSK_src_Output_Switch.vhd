-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Output_Switch.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Output_Switch
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Tx/Output Switch
-- Hierarchy Level: 2
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Output_Switch IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validOut                          :   OUT   std_logic
        );
END QPSK_src_Output_Switch;


ARCHITECTURE rtl OF QPSK_src_Output_Switch IS

  -- Component Declarations
  COMPONENT QPSK_src_Zero_On_Invalid
    PORT( dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_Zero_On_Invalid
    USE ENTITY work.QPSK_src_Zero_On_Invalid(rtl);

  -- Signals
  SIGNAL Zero_On_Invalid_dataOut_re       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Zero_On_Invalid_dataOut_im       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Zero_On_Invalid_dataOut_re_signed : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Zero_On_Invalid_dataOut_im_signed : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay1_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay1_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant_out1                    : std_logic;

BEGIN
  u_Zero_On_Invalid : QPSK_src_Zero_On_Invalid
    PORT MAP( dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => validIn,
              dataOut_re => Zero_On_Invalid_dataOut_re,  -- sfix16_En14
              dataOut_im => Zero_On_Invalid_dataOut_im  -- sfix16_En14
              );

  Zero_On_Invalid_dataOut_re_signed <= signed(Zero_On_Invalid_dataOut_re);

  Zero_On_Invalid_dataOut_im_signed <= signed(Zero_On_Invalid_dataOut_im);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_re <= to_signed(16#0000#, 16);
        Delay1_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay1_out1_re <= Zero_On_Invalid_dataOut_re_signed;
        Delay1_out1_im <= Zero_On_Invalid_dataOut_im_signed;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  dataOut_re <= std_logic_vector(Delay1_out1_re);

  dataOut_im <= std_logic_vector(Delay1_out1_im);

  Constant_out1 <= '1';

  validOut <= Constant_out1;

END rtl;

