-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Stream_FIFO.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Stream_FIFO
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/To DMA/Triggered Capture/Stream FIFO
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Stream_FIFO IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        validIn                           :   IN    std_logic;
        lastIn                            :   IN    std_logic;
        readyOut                          :   IN    std_logic;
        dataOut                           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        validOut                          :   OUT   std_logic;
        lastOut                           :   OUT   std_logic;
        readyIn                           :   OUT   std_logic
        );
END QPSK_src_Stream_FIFO;


ARCHITECTURE rtl OF QPSK_src_Stream_FIFO IS

  -- Component Declarations
  COMPONENT QPSK_src_HDL_FIFO_block1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Push                            :   IN    std_logic;
          Pop                             :   IN    std_logic;
          Out_rsvd                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          Empty                           :   OUT   std_logic;
          Num                             :   OUT   std_logic_vector(10 DOWNTO 0)  -- ufix11
          );
  END COMPONENT;

  COMPONENT QPSK_src_HDL_FIFO1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic;
          Push                            :   IN    std_logic;
          Pop                             :   IN    std_logic;
          Out_rsvd                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_HDL_FIFO_block1
    USE ENTITY work.QPSK_src_HDL_FIFO_block1(rtl);

  FOR ALL : QPSK_src_HDL_FIFO1
    USE ENTITY work.QPSK_src_HDL_FIFO1(rtl);

  -- Signals
  SIGNAL HDL_FIFO_out2                    : std_logic;
  SIGNAL NOT_out1                         : std_logic;
  SIGNAL AND_out1                         : std_logic;
  SIGNAL HDL_FIFO_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL HDL_FIFO_out3                    : std_logic_vector(10 DOWNTO 0);  -- ufix11
  SIGNAL HDL_FIFO_out1_unsigned           : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay_out1                       : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL HDL_FIFO1_out1                   : std_logic;
  SIGNAL AND1_out1                        : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL HDL_FIFO_out3_unsigned           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Compare_To_Constant_out1         : std_logic;

BEGIN
  u_HDL_FIFO : QPSK_src_HDL_FIFO_block1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => dataIn,  -- uint32
              Push => validIn,
              Pop => AND_out1,
              Out_rsvd => HDL_FIFO_out1,  -- uint32
              Empty => HDL_FIFO_out2,
              Num => HDL_FIFO_out3  -- ufix11
              );

  u_HDL_FIFO1 : QPSK_src_HDL_FIFO1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => lastIn,
              Push => validIn,
              Pop => AND_out1,
              Out_rsvd => HDL_FIFO1_out1
              );

  NOT_out1 <=  NOT HDL_FIFO_out2;

  AND_out1 <= NOT_out1 AND readyOut;

  HDL_FIFO_out1_unsigned <= unsigned(HDL_FIFO_out1);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_unsigned(0, 32);
      ELSIF enb = '1' THEN
        Delay_out1 <= HDL_FIFO_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay_process;


  dataOut <= std_logic_vector(Delay_out1);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= AND_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  AND1_out1 <= HDL_FIFO1_out1 AND AND_out1;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= AND1_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  HDL_FIFO_out3_unsigned <= unsigned(HDL_FIFO_out3);

  
  Compare_To_Constant_out1 <= '1' WHEN HDL_FIFO_out3_unsigned < to_unsigned(16#3FF#, 11) ELSE
      '0';

  validOut <= Delay1_out1;

  lastOut <= Delay2_out1;

  readyIn <= Compare_To_Constant_out1;

END rtl;

