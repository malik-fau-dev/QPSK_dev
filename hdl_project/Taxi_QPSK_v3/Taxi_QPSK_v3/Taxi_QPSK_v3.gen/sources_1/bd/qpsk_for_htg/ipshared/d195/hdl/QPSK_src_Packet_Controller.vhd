-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Packet_Controller.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Packet_Controller
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/Frequency and Time Synchronizer/Packet Controller
-- Hierarchy Level: 3
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Packet_Controller IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        syncPulse                         :   IN    std_logic;
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        startOut                          :   OUT   std_logic;
        endOut                            :   OUT   std_logic;
        validOut                          :   OUT   std_logic
        );
END QPSK_src_Packet_Controller;


ARCHITECTURE rtl OF QPSK_src_Packet_Controller IS

  -- Component Declarations
  COMPONENT QPSK_src_MATLAB_Function
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          valid                           :   IN    std_logic;
          syncPulse                       :   IN    std_logic;
          out_rsvd                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_End_Generator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          validIn                         :   IN    std_logic;
          rst                             :   IN    std_logic;
          endOut                          :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_sample_discard_controller
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          startIn                         :   IN    std_logic;
          endIn                           :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          startOut                        :   OUT   std_logic;
          endOut                          :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_MATLAB_Function
    USE ENTITY work.QPSK_src_MATLAB_Function(rtl);

  FOR ALL : QPSK_src_End_Generator
    USE ENTITY work.QPSK_src_End_Generator(rtl);

  FOR ALL : QPSK_src_sample_discard_controller
    USE ENTITY work.QPSK_src_sample_discard_controller(rtl);

  -- Signals
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_out1_re                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_out1_im                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL out_rsvd                         : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL End_Generator_endOut             : std_logic;
  SIGNAL dataOut_re_tmp                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dataOut_im_tmp                   : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_MATLAB_Function : QPSK_src_MATLAB_Function
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              valid => validIn,
              syncPulse => syncPulse,
              out_rsvd => out_rsvd
              );

  u_End_Generator : QPSK_src_End_Generator
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              validIn => Delay1_out1,
              rst => Logical_Operator_out1,
              endOut => End_Generator_endOut
              );

  u_sample_discard_controller : QPSK_src_sample_discard_controller
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              dataIn_re => std_logic_vector(Delay_out1_re),  -- sfix16_En14
              dataIn_im => std_logic_vector(Delay_out1_im),  -- sfix16_En14
              validIn => Delay1_out1,
              startIn => Delay2_out1,
              endIn => End_Generator_endOut,
              dataOut_re => dataOut_re_tmp,  -- sfix16_En14
              dataOut_im => dataOut_im_tmp,  -- sfix16_En14
              startOut => startOut,
              endOut => endOut,
              validOut => validOut
              );

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1_re <= to_signed(16#0000#, 16);
        Delay_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb_1_4_0 = '1' THEN
        Delay_out1_re <= dataIn_re_signed;
        Delay_out1_im <= dataIn_im_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        Delay1_out1 <= validIn;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Logical_Operator_out1 <= validIn AND out_rsvd;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb_1_4_0 = '1' THEN
        Delay2_out1 <= Logical_Operator_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  dataOut_re <= dataOut_re_tmp;

  dataOut_im <= dataOut_im_tmp;

END rtl;

