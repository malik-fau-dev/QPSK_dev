-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_Frequency_and_Time_Synchronizer.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_Frequency_and_Time_Synchronizer
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Rx/Frequency and Time Synchronizer
-- Hierarchy Level: 2
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_Frequency_and_Time_Synchronizer IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        enb_1_4_1                         :   IN    std_logic;
        enb_1_1_1                         :   IN    std_logic;
        enb_1_4_2                         :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        validIn                           :   IN    std_logic;
        rx_resetCS                        :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        startOut                          :   OUT   std_logic;
        endOut                            :   OUT   std_logic;
        validOut                          :   OUT   std_logic;
        rx_nSynced                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        rx_normCoarseFreqEst              :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
        );
END QPSK_src_Frequency_and_Time_Synchronizer;


ARCHITECTURE rtl OF QPSK_src_Frequency_and_Time_Synchronizer IS

  -- Component Declarations
  COMPONENT QPSK_src_Symbol_Synchronizer
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          enb_1_4_2                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Coarse_Frequency_Compensator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          rstCS                           :   OUT   std_logic;
          validOut                        :   OUT   std_logic;
          rx_normCoarseFreqEst            :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
          );
  END COMPONENT;

  COMPONENT QPSK_src_Carrier_Synchronizer
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          internalRst                     :   IN    std_logic;
          validIn                         :   IN    std_logic;
          rx_resetCS                      :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Preamble_Detector
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          syncPulse                       :   OUT   std_logic;
          validOut                        :   OUT   std_logic;
          rx_nSynced                      :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  COMPONENT QPSK_src_Phase_Ambiguity_Estimation_and_Correction
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          syncPulseIn                     :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          syncPulseOut                    :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Packet_Controller
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          syncPulse                       :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          startOut                        :   OUT   std_logic;
          endOut                          :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Rate_Handle
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_1                       :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          startIn                         :   IN    std_logic;
          endIn                           :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          startOut                        :   OUT   std_logic;
          endOut                          :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_Symbol_Synchronizer
    USE ENTITY work.QPSK_src_Symbol_Synchronizer(rtl);

  FOR ALL : QPSK_src_Coarse_Frequency_Compensator
    USE ENTITY work.QPSK_src_Coarse_Frequency_Compensator(rtl);

  FOR ALL : QPSK_src_Carrier_Synchronizer
    USE ENTITY work.QPSK_src_Carrier_Synchronizer(rtl);

  FOR ALL : QPSK_src_Preamble_Detector
    USE ENTITY work.QPSK_src_Preamble_Detector(rtl);

  FOR ALL : QPSK_src_Phase_Ambiguity_Estimation_and_Correction
    USE ENTITY work.QPSK_src_Phase_Ambiguity_Estimation_and_Correction(rtl);

  FOR ALL : QPSK_src_Packet_Controller
    USE ENTITY work.QPSK_src_Packet_Controller(rtl);

  FOR ALL : QPSK_src_Rate_Handle
    USE ENTITY work.QPSK_src_Rate_Handle(rtl);

  -- Signals
  SIGNAL Symbol_Synchronizer_dataOut_re   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Symbol_Synchronizer_dataOut_im   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Symbol_Synchronizer_validOut     : std_logic;
  SIGNAL Coarse_Frequency_Compensator_dataOut_re : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Coarse_Frequency_Compensator_dataOut_im : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Coarse_Frequency_Compensator_rstCS : std_logic;
  SIGNAL Coarse_Frequency_Compensator_validOut : std_logic;
  SIGNAL rx_normCoarseFreqEst_tmp         : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL Carrier_Synchronizer_dataOut_re  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Carrier_Synchronizer_dataOut_im  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Carrier_Synchronizer_validOut    : std_logic;
  SIGNAL Preamble_Detector_dataOut_re     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Preamble_Detector_dataOut_im     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Preamble_Detector_syncPulse      : std_logic;
  SIGNAL Preamble_Detector_validOut       : std_logic;
  SIGNAL rx_nSynced_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Phase_Ambiguity_Estimation_and_Correction_dataOut_re : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Phase_Ambiguity_Estimation_and_Correction_dataOut_im : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Phase_Ambiguity_Estimation_and_Correction_syncPulseOut : std_logic;
  SIGNAL Phase_Ambiguity_Estimation_and_Correction_validOut : std_logic;
  SIGNAL dataOut_re_1                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dataOut_im_1                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL startOut_1                       : std_logic;
  SIGNAL endOut_1                         : std_logic;
  SIGNAL validOut_1                       : std_logic;
  SIGNAL Rate_Handle_dataOut_re           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Rate_Handle_dataOut_im           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Rate_Handle_startOut             : std_logic;
  SIGNAL Rate_Handle_endOut               : std_logic;
  SIGNAL Rate_Handle_validOut             : std_logic;

BEGIN
  u_Symbol_Synchronizer : QPSK_src_Symbol_Synchronizer
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_2 => enb_1_4_2,
              dataIn_re => dataIn_re,  -- sfix16_En12
              dataIn_im => dataIn_im,  -- sfix16_En12
              validIn => validIn,
              dataOut_re => Symbol_Synchronizer_dataOut_re,  -- sfix16_En14
              dataOut_im => Symbol_Synchronizer_dataOut_im,  -- sfix16_En14
              validOut => Symbol_Synchronizer_validOut
              );

  u_Coarse_Frequency_Compensator : QPSK_src_Coarse_Frequency_Compensator
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              dataIn_re => Symbol_Synchronizer_dataOut_re,  -- sfix16_En14
              dataIn_im => Symbol_Synchronizer_dataOut_im,  -- sfix16_En14
              validIn => Symbol_Synchronizer_validOut,
              dataOut_re => Coarse_Frequency_Compensator_dataOut_re,  -- sfix16_En14
              dataOut_im => Coarse_Frequency_Compensator_dataOut_im,  -- sfix16_En14
              rstCS => Coarse_Frequency_Compensator_rstCS,
              validOut => Coarse_Frequency_Compensator_validOut,
              rx_normCoarseFreqEst => rx_normCoarseFreqEst_tmp  -- sfix21_En21
              );

  u_Carrier_Synchronizer : QPSK_src_Carrier_Synchronizer
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              dataIn_re => Coarse_Frequency_Compensator_dataOut_re,  -- sfix16_En14
              dataIn_im => Coarse_Frequency_Compensator_dataOut_im,  -- sfix16_En14
              internalRst => Coarse_Frequency_Compensator_rstCS,
              validIn => Coarse_Frequency_Compensator_validOut,
              rx_resetCS => rx_resetCS,
              dataOut_re => Carrier_Synchronizer_dataOut_re,  -- sfix16_En14
              dataOut_im => Carrier_Synchronizer_dataOut_im,  -- sfix16_En14
              validOut => Carrier_Synchronizer_validOut
              );

  u_Preamble_Detector : QPSK_src_Preamble_Detector
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              dataIn_re => Carrier_Synchronizer_dataOut_re,  -- sfix16_En14
              dataIn_im => Carrier_Synchronizer_dataOut_im,  -- sfix16_En14
              validIn => Carrier_Synchronizer_validOut,
              dataOut_re => Preamble_Detector_dataOut_re,  -- sfix16_En14
              dataOut_im => Preamble_Detector_dataOut_im,  -- sfix16_En14
              syncPulse => Preamble_Detector_syncPulse,
              validOut => Preamble_Detector_validOut,
              rx_nSynced => rx_nSynced_tmp  -- uint32
              );

  u_Phase_Ambiguity_Estimation_and_Correction : QPSK_src_Phase_Ambiguity_Estimation_and_Correction
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              dataIn_re => Preamble_Detector_dataOut_re,  -- sfix16_En14
              dataIn_im => Preamble_Detector_dataOut_im,  -- sfix16_En14
              syncPulseIn => Preamble_Detector_syncPulse,
              validIn => Preamble_Detector_validOut,
              dataOut_re => Phase_Ambiguity_Estimation_and_Correction_dataOut_re,  -- sfix16_En14
              dataOut_im => Phase_Ambiguity_Estimation_and_Correction_dataOut_im,  -- sfix16_En14
              syncPulseOut => Phase_Ambiguity_Estimation_and_Correction_syncPulseOut,
              validOut => Phase_Ambiguity_Estimation_and_Correction_validOut
              );

  u_Packet_Controller : QPSK_src_Packet_Controller
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              dataIn_re => Phase_Ambiguity_Estimation_and_Correction_dataOut_re,  -- sfix16_En14
              dataIn_im => Phase_Ambiguity_Estimation_and_Correction_dataOut_im,  -- sfix16_En14
              syncPulse => Phase_Ambiguity_Estimation_and_Correction_syncPulseOut,
              validIn => Phase_Ambiguity_Estimation_and_Correction_validOut,
              dataOut_re => dataOut_re_1,  -- sfix16_En14
              dataOut_im => dataOut_im_1,  -- sfix16_En14
              startOut => startOut_1,
              endOut => endOut_1,
              validOut => validOut_1
              );

  u_Rate_Handle : QPSK_src_Rate_Handle
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_1 => enb_1_4_1,
              enb_1_1_1 => enb_1_1_1,
              dataIn_re => dataOut_re_1,  -- sfix16_En14
              dataIn_im => dataOut_im_1,  -- sfix16_En14
              startIn => startOut_1,
              endIn => endOut_1,
              validIn => validOut_1,
              dataOut_re => Rate_Handle_dataOut_re,  -- sfix16_En14
              dataOut_im => Rate_Handle_dataOut_im,  -- sfix16_En14
              startOut => Rate_Handle_startOut,
              endOut => Rate_Handle_endOut,
              validOut => Rate_Handle_validOut
              );


  dataOut_re <= Rate_Handle_dataOut_re;

  dataOut_im <= Rate_Handle_dataOut_im;

  startOut <= Rate_Handle_startOut;

  endOut <= Rate_Handle_endOut;

  validOut <= Rate_Handle_validOut;

  rx_nSynced <= rx_nSynced_tmp;

  rx_normCoarseFreqEst <= rx_normCoarseFreqEst_tmp;

END rtl;

