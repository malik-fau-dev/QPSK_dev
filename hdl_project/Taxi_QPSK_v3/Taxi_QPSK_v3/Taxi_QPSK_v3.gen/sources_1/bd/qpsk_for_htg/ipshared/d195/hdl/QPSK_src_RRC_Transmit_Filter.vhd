-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_RRC_Transmit_Filter.vhd
-- Created: 2025-09-17 13:27:52
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_RRC_Transmit_Filter
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK/QPSK Tx/RRC Transmit Filter
-- Hierarchy Level: 2
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_src_RRC_Transmit_Filter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validOut                          :   OUT   std_logic
        );
END QPSK_src_RRC_Transmit_Filter;


ARCHITECTURE rtl OF QPSK_src_RRC_Transmit_Filter IS

  -- Component Declarations
  COMPONENT QPSK_src_FIR_Interpolator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En16
          dataIn_im                       :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En16
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(34 DOWNTO 0);  -- sfix35_En32
          dataOut_im                      :   OUT   std_logic_vector(34 DOWNTO 0);  -- sfix35_En32
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_FIR_Interpolator
    USE ENTITY work.QPSK_src_FIR_Interpolator(rtl);

  -- Signals
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Data_Type_Conversion_out1_re     : signed(16 DOWNTO 0);  -- sfix17_En16
  SIGNAL Data_Type_Conversion_out1_im     : signed(16 DOWNTO 0);  -- sfix17_En16
  SIGNAL FIR_Interpolator_out1_re         : std_logic_vector(34 DOWNTO 0);  -- ufix35
  SIGNAL FIR_Interpolator_out1_im         : std_logic_vector(34 DOWNTO 0);  -- ufix35
  SIGNAL FIR_Interpolator_out2            : std_logic;
  SIGNAL FIR_Interpolator_out1_re_signed  : signed(34 DOWNTO 0);  -- sfix35_En32
  SIGNAL FIR_Interpolator_out1_im_signed  : signed(34 DOWNTO 0);  -- sfix35_En32
  SIGNAL Data_Type_Conversion1_out1_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Data_Type_Conversion1_out1_im    : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  u_FIR_Interpolator : QPSK_src_FIR_Interpolator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => std_logic_vector(Data_Type_Conversion_out1_re),  -- sfix17_En16
              dataIn_im => std_logic_vector(Data_Type_Conversion_out1_im),  -- sfix17_En16
              validIn => validIn,
              dataOut_re => FIR_Interpolator_out1_re,  -- sfix35_En32
              dataOut_im => FIR_Interpolator_out1_im,  -- sfix35_En32
              validOut => FIR_Interpolator_out2
              );

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  Data_Type_Conversion_out1_re <= dataIn_re_signed & '0';
  Data_Type_Conversion_out1_im <= dataIn_im_signed & '0';

  FIR_Interpolator_out1_re_signed <= signed(FIR_Interpolator_out1_re);

  FIR_Interpolator_out1_im_signed <= signed(FIR_Interpolator_out1_im);

  Data_Type_Conversion1_out1_re <= FIR_Interpolator_out1_re_signed(33 DOWNTO 18);
  Data_Type_Conversion1_out1_im <= FIR_Interpolator_out1_im_signed(33 DOWNTO 18);

  dataOut_re <= std_logic_vector(Data_Type_Conversion1_out1_re);

  dataOut_im <= std_logic_vector(Data_Type_Conversion1_out1_im);

  validOut <= FIR_Interpolator_out2;

END rtl;

