-- -------------------------------------------------------------
-- 
-- File Name: C:\QPSK\hdl_prj_zcu111\hdlsrc\hdlcoder_QPSKTxRx_RFSoC\QPSK_src_QPSK.vhd
-- Created: 2025-09-17 13:27:53
-- 
-- Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1.6276e-08
-- Target subsystem base rate: 1.6276e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1.6276e-08
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- s2mmData                      ce_out        1.6276e-08
-- s2mmValid                     ce_out        1.6276e-08
-- s2mmLast                      ce_out        1.6276e-08
-- dacDataI_0                    ce_out        1.6276e-08
-- dacDataI_1                    ce_out        1.6276e-08
-- dacDataI_2                    ce_out        1.6276e-08
-- dacDataI_3                    ce_out        1.6276e-08
-- dacDataQ_0                    ce_out        1.6276e-08
-- dacDataQ_1                    ce_out        1.6276e-08
-- dacDataQ_2                    ce_out        1.6276e-08
-- dacDataQ_3                    ce_out        1.6276e-08
-- dacValid                      ce_out        1.6276e-08
-- regOut_rx_nSynced             ce_out        1.6276e-08
-- regOut_rx_normCoarseFreqEst   ce_out        1.6276e-08
-- mm2sReady                     ce_out        1.6276e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_src_QPSK
-- Source Path: hdlcoder_QPSKTxRx_RFSoC/QPSK
-- Hierarchy Level: 0
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.QPSK_src_QPSK_pkg.ALL;

ENTITY QPSK_src_QPSK IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        mm2sData                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        mm2sValid                         :   IN    std_logic;
        adcDataI_0                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataI_1                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataI_2                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataI_3                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataQ_0                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataQ_1                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataQ_2                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcDataQ_3                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        adcValid                          :   IN    std_logic;
        regIn_tx_enable                   :   IN    std_logic;
        regIn_rx_reset_cs                 :   IN    std_logic;
        regIn_rx_src_sel                  :   IN    std_logic;  -- ufix1
        regIn_capture_start               :   IN    std_logic;
        regIn_capture_length              :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        regIn_capture_src_sel             :   IN    std_logic;  -- ufix1
        regIn_tx_output_gain              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        regIn_rx_input_gain               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        regIn_capture_mode                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        s2mmReady                         :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        s2mmData                          :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        s2mmValid                         :   OUT   std_logic;
        s2mmLast                          :   OUT   std_logic;
        dacDataI_0                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataI_1                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataI_2                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataI_3                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataQ_0                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataQ_1                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataQ_2                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacDataQ_3                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dacValid                          :   OUT   std_logic;
        regOut_rx_nSynced                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        regOut_rx_normCoarseFreqEst       :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En21
        mm2sReady                         :   OUT   std_logic
        );
END QPSK_src_QPSK;


ARCHITECTURE rtl OF QPSK_src_QPSK IS

  -- Component Declarations
  COMPONENT QPSK_src_QPSK_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_1_1                       :   OUT   std_logic;
          enb_1_4_0                       :   OUT   std_logic;
          enb_1_4_1                       :   OUT   std_logic;
          enb_1_4_2                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_QPSK_Tx
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          validIn                         :   IN    std_logic;
          TxBus_data_re                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          TxBus_data_im                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          TxBus_valid                     :   OUT   std_logic;
          readyIn                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Input_Registers
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          enb_1_4_1                       :   IN    std_logic;
          regIn_tx_enable                 :   IN    std_logic;
          regIn_rx_reset_cs               :   IN    std_logic;
          regIn_rx_src_sel                :   IN    std_logic;  -- ufix1
          regIn_capture_start             :   IN    std_logic;
          regIn_capture_length            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          regIn_capture_src_sel           :   IN    std_logic;  -- ufix1
          regIn_tx_output_gain            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          regIn_rx_input_gain             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          regIn_capture_mode              :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          rx_input_gain                   :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          capture_mode                    :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          tx_enable                       :   OUT   std_logic;
          rx_resetCS                      :   OUT   std_logic;
          rx_src_sel                      :   OUT   std_logic;  -- ufix1
          capture_start                   :   OUT   std_logic;
          capture_length                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          capture_src_sel                 :   OUT   std_logic;  -- ufix1
          tx_output_gain                  :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En15
          );
  END COMPONENT;

  COMPONENT QPSK_src_From_ADC
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          adcDataI                        :   IN    vector_of_std_logic_vector16(0 TO 3);  -- int16 [4]
          adcDataQ                        :   IN    vector_of_std_logic_vector16(0 TO 3);  -- int16 [4]
          adcValid                        :   IN    std_logic;
          rx_input_gain                   :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          adcBus_data_re                  :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          adcBus_data_im                  :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          adcBus_valid                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Rx_Input_Mux
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          TxBus_data_re                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          TxBus_data_im                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          TxBus_valid                     :   IN    std_logic;
          adcBus_data_re                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          adcBus_data_im                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          adcBus_valid                    :   IN    std_logic;
          rx_src_sel                      :   IN    std_logic;  -- ufix1
          RxBus_data_re                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          RxBus_data_im                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          RxBus_valid                     :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_QPSK_Rx
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          enb_1_4_1                       :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          enb_1_4_2                       :   IN    std_logic;
          RxBus_data_re                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          RxBus_data_im                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          RxBus_valid                     :   IN    std_logic;
          rx_resetCS                      :   IN    std_logic;
          dataBus_data                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          dataBus_valid                   :   OUT   std_logic;
          rx_nSynced                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          rx_normCoarseFreqEst            :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
          );
  END COMPONENT;

  COMPONENT QPSK_src_To_DMA
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataBus_data                    :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          dataBus_valid                   :   IN    std_logic;
          RxBus_data_re                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          RxBus_data_im                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          RxBus_valid                     :   IN    std_logic;
          s2mmReady                       :   IN    std_logic;
          capture_mode                    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          capture_start                   :   IN    std_logic;
          capture_length                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          capture_src_sel                 :   IN    std_logic;  -- ufix1
          s2mmData                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          s2mmValid                       :   OUT   std_logic;
          s2mmLast                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_To_DAC
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          TxBus_data_re                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          TxBus_data_im                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          TxBus_valid                     :   IN    std_logic;
          tx_enable                       :   IN    std_logic;
          tx_output_gain                  :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          dacDataI                        :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- int16 [4]
          dacDataQ                        :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- int16 [4]
          dacValid                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_src_Output_Registers
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          rx_nSynced                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          rx_normCoarseFreqEst            :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En21
          regOut_rx_nSynced               :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          regOut_rx_normCoarseFreqEst     :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En21
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : QPSK_src_QPSK_tc
    USE ENTITY work.QPSK_src_QPSK_tc(rtl);

  FOR ALL : QPSK_src_QPSK_Tx
    USE ENTITY work.QPSK_src_QPSK_Tx(rtl);

  FOR ALL : QPSK_src_Input_Registers
    USE ENTITY work.QPSK_src_Input_Registers(rtl);

  FOR ALL : QPSK_src_From_ADC
    USE ENTITY work.QPSK_src_From_ADC(rtl);

  FOR ALL : QPSK_src_Rx_Input_Mux
    USE ENTITY work.QPSK_src_Rx_Input_Mux(rtl);

  FOR ALL : QPSK_src_QPSK_Rx
    USE ENTITY work.QPSK_src_QPSK_Rx(rtl);

  FOR ALL : QPSK_src_To_DMA
    USE ENTITY work.QPSK_src_To_DMA(rtl);

  FOR ALL : QPSK_src_To_DAC
    USE ENTITY work.QPSK_src_To_DAC(rtl);

  FOR ALL : QPSK_src_Output_Registers
    USE ENTITY work.QPSK_src_Output_Registers(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_4_0                        : std_logic;
  SIGNAL enb_1_4_1                        : std_logic;
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb_1_4_2                        : std_logic;
  SIGNAL QPSK_Tx_TxBus_data_re            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSK_Tx_TxBus_data_im            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSK_Tx_TxBus_valid              : std_logic;
  SIGNAL QPSK_Tx_readyIn                  : std_logic;
  SIGNAL adcDataI                         : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL adcDataQ                         : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL rx_input_gain                    : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL capture_mode                     : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL tx_enable                        : std_logic;
  SIGNAL rx_resetCS                       : std_logic;
  SIGNAL rx_src_sel                       : std_logic;  -- ufix1
  SIGNAL capture_start                    : std_logic;
  SIGNAL capture_length                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL capture_src_sel                  : std_logic;  -- ufix1
  SIGNAL tx_output_gain                   : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL From_ADC_adcBus_data_re          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL From_ADC_adcBus_data_im          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL From_ADC_adcBus_valid            : std_logic;
  SIGNAL Rx_Input_Mux_RxBus_data_re       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Rx_Input_Mux_RxBus_data_im       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Rx_Input_Mux_RxBus_valid         : std_logic;
  SIGNAL QPSK_Rx_dataBus_data             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL QPSK_Rx_dataBus_valid            : std_logic;
  SIGNAL rx_nSynced                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL rx_normCoarseFreqEst             : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL To_DMA_s2mmData                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL To_DMA_s2mmValid                 : std_logic;
  SIGNAL To_DMA_s2mmLast                  : std_logic;
  SIGNAL To_DAC_dacDataI                  : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL To_DAC_dacDataQ                  : vector_of_std_logic_vector16(0 TO 3);  -- ufix16 [4]
  SIGNAL To_DAC_dacValid                  : std_logic;
  SIGNAL Output_Registers_regOut_rx_nSynced : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Output_Registers_regOut_rx_normCoarseFreqEst : std_logic_vector(20 DOWNTO 0);  -- ufix21

BEGIN
  u_QPSK_tc : QPSK_src_QPSK_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_1_1 => enb_1_1_1,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_1 => enb_1_4_1,
              enb_1_4_2 => enb_1_4_2
              );

  u_QPSK_Tx : QPSK_src_QPSK_Tx
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn => mm2sData,  -- uint32
              validIn => mm2sValid,
              TxBus_data_re => QPSK_Tx_TxBus_data_re,  -- sfix16_En14
              TxBus_data_im => QPSK_Tx_TxBus_data_im,  -- sfix16_En14
              TxBus_valid => QPSK_Tx_TxBus_valid,
              readyIn => QPSK_Tx_readyIn
              );

  u_Input_Registers : QPSK_src_Input_Registers
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_1 => enb_1_4_1,
              regIn_tx_enable => regIn_tx_enable,
              regIn_rx_reset_cs => regIn_rx_reset_cs,
              regIn_rx_src_sel => regIn_rx_src_sel,  -- ufix1
              regIn_capture_start => regIn_capture_start,
              regIn_capture_length => regIn_capture_length,  -- uint32
              regIn_capture_src_sel => regIn_capture_src_sel,  -- ufix1
              regIn_tx_output_gain => regIn_tx_output_gain,  -- sfix18_En15
              regIn_rx_input_gain => regIn_rx_input_gain,  -- sfix18_En15
              regIn_capture_mode => regIn_capture_mode,  -- ufix2
              rx_input_gain => rx_input_gain,  -- sfix18_En15
              capture_mode => capture_mode,  -- ufix2
              tx_enable => tx_enable,
              rx_resetCS => rx_resetCS,
              rx_src_sel => rx_src_sel,  -- ufix1
              capture_start => capture_start,
              capture_length => capture_length,  -- uint32
              capture_src_sel => capture_src_sel,  -- ufix1
              tx_output_gain => tx_output_gain  -- sfix18_En15
              );

  u_From_ADC : QPSK_src_From_ADC
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              adcDataI => adcDataI,  -- int16 [4]
              adcDataQ => adcDataQ,  -- int16 [4]
              adcValid => adcValid,
              rx_input_gain => rx_input_gain,  -- sfix18_En15
              adcBus_data_re => From_ADC_adcBus_data_re,  -- sfix16_En14
              adcBus_data_im => From_ADC_adcBus_data_im,  -- sfix16_En14
              adcBus_valid => From_ADC_adcBus_valid
              );

  u_Rx_Input_Mux : QPSK_src_Rx_Input_Mux
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              TxBus_data_re => QPSK_Tx_TxBus_data_re,  -- sfix16_En14
              TxBus_data_im => QPSK_Tx_TxBus_data_im,  -- sfix16_En14
              TxBus_valid => QPSK_Tx_TxBus_valid,
              adcBus_data_re => From_ADC_adcBus_data_re,  -- sfix16_En14
              adcBus_data_im => From_ADC_adcBus_data_im,  -- sfix16_En14
              adcBus_valid => From_ADC_adcBus_valid,
              rx_src_sel => rx_src_sel,  -- ufix1
              RxBus_data_re => Rx_Input_Mux_RxBus_data_re,  -- sfix16_En14
              RxBus_data_im => Rx_Input_Mux_RxBus_data_im,  -- sfix16_En14
              RxBus_valid => Rx_Input_Mux_RxBus_valid
              );

  u_QPSK_Rx : QPSK_src_QPSK_Rx
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_1 => enb_1_4_1,
              enb_1_1_1 => enb_1_1_1,
              enb_1_4_2 => enb_1_4_2,
              RxBus_data_re => Rx_Input_Mux_RxBus_data_re,  -- sfix16_En14
              RxBus_data_im => Rx_Input_Mux_RxBus_data_im,  -- sfix16_En14
              RxBus_valid => Rx_Input_Mux_RxBus_valid,
              rx_resetCS => rx_resetCS,
              dataBus_data => QPSK_Rx_dataBus_data,  -- uint32
              dataBus_valid => QPSK_Rx_dataBus_valid,
              rx_nSynced => rx_nSynced,  -- uint32
              rx_normCoarseFreqEst => rx_normCoarseFreqEst  -- sfix21_En21
              );

  u_To_DMA : QPSK_src_To_DMA
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataBus_data => QPSK_Rx_dataBus_data,  -- uint32
              dataBus_valid => QPSK_Rx_dataBus_valid,
              RxBus_data_re => Rx_Input_Mux_RxBus_data_re,  -- sfix16_En14
              RxBus_data_im => Rx_Input_Mux_RxBus_data_im,  -- sfix16_En14
              RxBus_valid => Rx_Input_Mux_RxBus_valid,
              s2mmReady => s2mmReady,
              capture_mode => capture_mode,  -- ufix2
              capture_start => capture_start,
              capture_length => capture_length,  -- uint32
              capture_src_sel => capture_src_sel,  -- ufix1
              s2mmData => To_DMA_s2mmData,  -- uint32
              s2mmValid => To_DMA_s2mmValid,
              s2mmLast => To_DMA_s2mmLast
              );

  u_To_DAC : QPSK_src_To_DAC
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              TxBus_data_re => QPSK_Tx_TxBus_data_re,  -- sfix16_En14
              TxBus_data_im => QPSK_Tx_TxBus_data_im,  -- sfix16_En14
              TxBus_valid => QPSK_Tx_TxBus_valid,
              tx_enable => tx_enable,
              tx_output_gain => tx_output_gain,  -- sfix18_En15
              dacDataI => To_DAC_dacDataI,  -- int16 [4]
              dacDataQ => To_DAC_dacDataQ,  -- int16 [4]
              dacValid => To_DAC_dacValid
              );

  u_Output_Registers : QPSK_src_Output_Registers
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              rx_nSynced => rx_nSynced,  -- uint32
              rx_normCoarseFreqEst => rx_normCoarseFreqEst,  -- sfix21_En21
              regOut_rx_nSynced => Output_Registers_regOut_rx_nSynced,  -- uint32
              regOut_rx_normCoarseFreqEst => Output_Registers_regOut_rx_normCoarseFreqEst  -- sfix21_En21
              );

  adcDataI(0) <= adcDataI_0;
  adcDataI(1) <= adcDataI_1;
  adcDataI(2) <= adcDataI_2;
  adcDataI(3) <= adcDataI_3;

  adcDataQ(0) <= adcDataQ_0;
  adcDataQ(1) <= adcDataQ_1;
  adcDataQ(2) <= adcDataQ_2;
  adcDataQ(3) <= adcDataQ_3;

  ce_out <= enb_1_1_1;

  s2mmData <= To_DMA_s2mmData;

  s2mmValid <= To_DMA_s2mmValid;

  s2mmLast <= To_DMA_s2mmLast;

  dacDataI_0 <= To_DAC_dacDataI(0);

  dacDataI_1 <= To_DAC_dacDataI(1);

  dacDataI_2 <= To_DAC_dacDataI(2);

  dacDataI_3 <= To_DAC_dacDataI(3);

  dacDataQ_0 <= To_DAC_dacDataQ(0);

  dacDataQ_1 <= To_DAC_dacDataQ(1);

  dacDataQ_2 <= To_DAC_dacDataQ(2);

  dacDataQ_3 <= To_DAC_dacDataQ(3);

  dacValid <= To_DAC_dacValid;

  regOut_rx_nSynced <= Output_Registers_regOut_rx_nSynced;

  regOut_rx_normCoarseFreqEst <= Output_Registers_regOut_rx_normCoarseFreqEst;

  mm2sReady <= QPSK_Tx_readyIn;

END rtl;

